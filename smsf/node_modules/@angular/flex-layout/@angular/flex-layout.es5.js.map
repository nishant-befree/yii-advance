{"version":3,"file":"flex-layout.es5.js","sources":["../../src/lib/module.ts","../../src/lib/flexbox/api/style.ts","../../src/lib/utils/style-transforms.ts","../../src/lib/flexbox/api/class.ts","../../src/lib/flexbox/api/base-adapter.ts","../../src/lib/flexbox/api/layout-gap.ts","../../src/lib/flexbox/api/layout-align.ts","../../src/lib/flexbox/api/flex-order.ts","../../src/lib/flexbox/api/flex-offset.ts","../../src/lib/flexbox/api/flex-fill.ts","../../src/lib/flexbox/api/flex-align.ts","../../src/lib/flexbox/api/show-hide.ts","../../src/lib/flexbox/api/flex.ts","../../src/lib/utils/basis-validator.ts","../../src/lib/flexbox/api/layout-wrap.ts","../../src/lib/flexbox/api/layout.ts","../../src/lib/flexbox/api/base.ts","../../src/lib/flexbox/responsive/responsive-activation.ts","../../src/lib/utils/style-utils.ts","../../src/lib/utils/auto-prefixer.ts","../../src/lib/utils/layout-validator.ts","../../src/lib/media-query/media-monitor-provider.ts","../../src/lib/media-query/_module.ts","../../src/lib/media-query/breakpoints/break-points-provider.ts","../../src/lib/utils/breakpoint-tools.ts","../../src/lib/media-query/breakpoints/data/orientation-break-points.ts","../../src/lib/media-query/breakpoints/data/break-points.ts","../../src/lib/media-query/observable-media-provider.ts","../../src/lib/media-query/observable-media.ts","../../src/lib/media-query/media-monitor.ts","../../src/lib/utils/add-alias.ts","../../src/lib/utils/object-extend.ts","../../src/lib/media-query/breakpoints/break-point-registry.ts","../../src/lib/media-query/breakpoints/break-points-token.ts","../../src/lib/media-query/match-media.ts","../../src/lib/media-query/media-change.ts","../../src/lib/version.ts"],"sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {MediaQueriesModule} from './media-query/_module';\n\nimport {BreakPoint} from './media-query/breakpoints/break-point';\nimport {\n  BreakPointProviderOptions,\n  DEFAULT_BREAKPOINTS_PROVIDER,\n  CUSTOM_BREAKPOINTS_PROVIDER_FACTORY\n} from './media-query/breakpoints/break-points-provider';\nimport {MEDIA_MONITOR_PROVIDER} from './media-query/media-monitor-provider';\nimport {OBSERVABLE_MEDIA_PROVIDER} from './media-query/observable-media-provider';\n\nimport {FlexDirective} from './flexbox/api/flex';\nimport {LayoutDirective} from './flexbox/api/layout';\nimport {ShowHideDirective} from './flexbox/api/show-hide';\nimport {FlexAlignDirective} from './flexbox/api/flex-align';\nimport {FlexFillDirective} from './flexbox/api/flex-fill';\nimport {FlexOffsetDirective} from './flexbox/api/flex-offset';\nimport {FlexOrderDirective} from './flexbox/api/flex-order';\nimport {LayoutAlignDirective} from './flexbox/api/layout-align';\nimport {LayoutWrapDirective} from './flexbox/api/layout-wrap';\nimport {LayoutGapDirective} from './flexbox/api/layout-gap';\nimport {ClassDirective} from './flexbox/api/class';\nimport {StyleDirective} from './flexbox/api/style';\n\n/**\n * Since the equivalent results are easily achieved with a css class attached to each\n * layout child, these have been deprecated and removed from the API.\n *\n *  import {LayoutPaddingDirective} from './flexbox/api/layout-padding';\n *  import {LayoutMarginDirective} from './flexbox/api/layout-margin';\n */\n\nconst ALL_DIRECTIVES = [\n  LayoutDirective,\n  LayoutWrapDirective,\n  LayoutGapDirective,\n  LayoutAlignDirective,\n  FlexDirective,\n  FlexOrderDirective,\n  FlexOffsetDirective,\n  FlexFillDirective,\n  FlexAlignDirective,\n  ShowHideDirective,\n  ClassDirective,\n  StyleDirective\n];\n\n/**\n *\n */\n@NgModule({\n  imports: [MediaQueriesModule],\n  exports: [MediaQueriesModule, ...ALL_DIRECTIVES],\n  declarations: [...ALL_DIRECTIVES],\n  providers: [\n    MEDIA_MONITOR_PROVIDER,\n    DEFAULT_BREAKPOINTS_PROVIDER,   // Extend defaults with internal custom breakpoints\n    OBSERVABLE_MEDIA_PROVIDER\n  ]\n})\nexport class FlexLayoutModule {\n  /**\n   * External uses can easily add custom breakpoints AND include internal orientations\n   * breakpoints; which are not available by default.\n   *\n   * !! Selector aliases are not auto-configured. Developers must subclass\n   * the API directives to support extra selectors for the orientations breakpoints !!\n   */\n  static provideBreakPoints(breakpoints: BreakPoint[],\n                            options ?: BreakPointProviderOptions): ModuleWithProviders {\n    return {\n      ngModule: FlexLayoutModule,\n      providers: [\n        CUSTOM_BREAKPOINTS_PROVIDER_FACTORY(breakpoints, options || {orientations: false})\n      ]\n    };\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Input,\n  KeyValueDiffers,\n  OnDestroy,\n  OnChanges,\n  Optional,\n  Renderer,\n  Renderer2,\n  SecurityContext,\n  Self,\n  SimpleChanges,\n} from '@angular/core';\nimport {NgStyle} from '@angular/common';\n\nimport {BaseFxDirective} from './base';\nimport {BaseFxDirectiveAdapter} from './base-adapter';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {extendObject} from '../../utils/object-extend';\nimport {DomSanitizer} from '@angular/platform-browser';\n\nimport {\n  NgStyleRawList,\n  NgStyleType,\n  NgStyleSanitizer,\n  ngStyleUtils as _\n} from '../../utils/style-transforms';\n\n/**\n * Directive to add responsive support for ngStyle.\n *\n */\n@Directive({\n  selector: `\n    [style.xs], [style.sm], [style.md], [style.lg], [style.xl],\n    [style.lt-sm], [style.lt-md], [style.lt-lg], [style.lt-xl],\n    [style.gt-xs], [style.gt-sm], [style.gt-md], [style.gt-lg],\n    [ngStyle],\n    [ngStyle.xs], [ngStyle.sm], [ngStyle.lg], [ngStyle.xl],\n    [ngStyle.lt-sm], [ngStyle.lt-md], [ngStyle.lt-lg], [ngStyle.lt-xl],\n    [ngStyle.gt-xs], [ngStyle.gt-sm], [ngStyle.gt-md], [ngStyle.gt-lg]\n  `\n})\nexport class StyleDirective extends BaseFxDirective\n    implements DoCheck, OnChanges, OnDestroy {\n\n  /**\n   * Intercept ngStyle assignments so we cache the default styles\n   * which are merged with activated styles or used as fallbacks.\n   */\n  @Input('ngStyle')\n  set styleBase(val: NgStyleType) {\n    this._base.cacheInput('style', val, true);\n    this._ngStyleInstance.ngStyle = this._base.inputMap['style'];\n  }\n\n  /* tslint:disable */\n  @Input('ngStyle.xs')    set ngStyleXs(val: NgStyleType) { this._base.cacheInput('styleXs', val, true); }\n  @Input('ngStyle.sm')    set ngStyleSm(val: NgStyleType) {  this._base.cacheInput('styleSm', val, true); };\n  @Input('ngStyle.md')    set ngStyleMd(val: NgStyleType) { this._base.cacheInput('styleMd', val, true); };\n  @Input('ngStyle.lg')    set ngStyleLg(val: NgStyleType) { this._base.cacheInput('styleLg', val, true);};\n  @Input('ngStyle.xl')    set ngStyleXl(val: NgStyleType) { this._base.cacheInput('styleXl', val, true); };\n\n  @Input('ngStyle.lt-sm') set ngStyleLtSm(val: NgStyleType) { this._base.cacheInput('styleLtSm', val, true); };\n  @Input('ngStyle.lt-md') set ngStyleLtMd(val: NgStyleType) { this._base.cacheInput('styleLtMd', val, true); };\n  @Input('ngStyle.lt-lg') set ngStyleLtLg(val: NgStyleType) { this._base.cacheInput('styleLtLg', val, true); };\n  @Input('ngStyle.lt-xl') set ngStyleLtXl(val: NgStyleType) { this._base.cacheInput('styleLtXl', val, true); };\n\n  @Input('ngStyle.gt-xs') set ngStyleGtXs(val: NgStyleType) { this._base.cacheInput('styleGtXs', val, true); };\n  @Input('ngStyle.gt-sm') set ngStyleGtSm(val: NgStyleType) { this._base.cacheInput('styleGtSm', val, true);} ;\n  @Input('ngStyle.gt-md') set ngStyleGtMd(val: NgStyleType) { this._base.cacheInput('styleGtMd', val, true);};\n  @Input('ngStyle.gt-lg') set ngStyleGtLg(val: NgStyleType) { this._base.cacheInput('styleGtLg', val, true); };\n\n  /** Deprecated selectors */\n  @Input('style.xs')      set styleXs(val: NgStyleType) { this._base.cacheInput('styleXs', val, true); }\n  @Input('style.sm')      set styleSm(val: NgStyleType) { this._base.cacheInput('styleSm', val, true); };\n  @Input('style.md')      set styleMd(val: NgStyleType) { this._base.cacheInput('styleMd', val, true);};\n  @Input('style.lg')      set styleLg(val: NgStyleType) { this._base.cacheInput('styleLg', val, true); };\n  @Input('style.xl')      set styleXl(val: NgStyleType) { this._base.cacheInput('styleXl', val, true); };\n\n  @Input('style.lt-sm')   set styleLtSm(val: NgStyleType) { this._base.cacheInput('styleLtSm', val, true); };\n  @Input('style.lt-md')   set styleLtMd(val: NgStyleType) { this._base.cacheInput('styleLtMd', val, true); };\n  @Input('style.lt-lg')   set styleLtLg(val: NgStyleType) { this._base.cacheInput('styleLtLg', val, true);};\n  @Input('style.lt-xl')   set styleLtXl(val: NgStyleType) { this._base.cacheInput('styleLtXl', val, true); };\n\n  @Input('style.gt-xs')   set styleGtXs(val: NgStyleType) { this._base.cacheInput('styleGtXs', val, true); };\n  @Input('style.gt-sm')   set styleGtSm(val: NgStyleType) { this._base.cacheInput('styleGtSm', val, true); };\n  @Input('style.gt-md')   set styleGtMd(val: NgStyleType) { this._base.cacheInput('styleGtMd', val, true);};\n  @Input('style.gt-lg')   set styleGtLg(val: NgStyleType) { this._base.cacheInput('styleGtLg', val, true); };\n\n  /* tslint:enable */\n  /**\n   *  Constructor for the ngStyle subclass; which adds selectors and\n   *  a MediaQuery Activation Adapter\n   */\n  constructor(private monitor: MediaMonitor,\n              protected _sanitizer: DomSanitizer,\n              _ngEl: ElementRef, _renderer: Renderer2,\n              _differs: KeyValueDiffers, _oldRenderer: Renderer,\n              @Optional() @Self() private _ngStyleInstance: NgStyle) {\n\n    super(monitor, _ngEl, _renderer);\n\n    // Build adapter, `cacheInput()` interceptor, and get current inline style if any\n    this._buildAdapter(this.monitor, _ngEl, _renderer);\n    this._base.cacheInput('style', _ngEl.nativeElement.getAttribute('style'), true);\n\n    // Create an instance NgStyle Directive instance only if `ngStyle=\"\"` has NOT been defined on\n    // the same host element; since the responsive versions may be defined...\n    if ( !this._ngStyleInstance ) {\n      this._ngStyleInstance = new NgStyle(_differs, _ngEl, _oldRenderer);\n    }\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /**\n   * For @Input changes on the current mq activation property\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (this._base.activeKey in changes) {\n      this._updateStyle();\n    }\n  }\n\n  /**\n   * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n   */\n  ngDoCheck() {\n    if (!this._base.hasMediaQueryListener) {\n      this._configureMQListener();\n    }\n    this._ngStyleInstance.ngDoCheck();\n  }\n\n  ngOnDestroy() {\n    this._base.ngOnDestroy();\n    this._ngStyleInstance = null;\n  }\n\n  // ******************************************************************\n  // Internal Methods\n  // ******************************************************************\n\n  /**\n     * Build an mqActivation object that bridges\n     * mql change events to onMediaQueryChange handlers\n     */\n    protected _configureMQListener() {\n      this._base.listenForMediaQueryChanges('style', '', (changes: MediaChange) => {\n        this._updateStyle(changes.value);\n\n        // trigger NgClass::_applyIterableChanges()\n        this._ngStyleInstance.ngDoCheck();\n      });\n    }\n\n  // ************************************************************************\n  // Private Internal Methods\n  // ************************************************************************\n\n  /**\n   * Use the currently activated input property and assign to\n   * `ngStyle` which does the style injections...\n   */\n  protected _updateStyle(value?: NgStyleType) {\n    let style = value || this._base.queryInput('style') || '';\n    if (this._base.mqActivation) {\n      style = this._base.mqActivation.activatedInput;\n    }\n\n    // Delegate subsequent activity to the NgStyle logic\n    this._ngStyleInstance.ngStyle = style;\n  }\n\n\n  /**\n   * Build MediaQuery Activation Adapter\n   * This adapter manages listening to mediaQuery change events and identifying\n   * which property value should be used for the style update\n   */\n  protected _buildAdapter(monitor: MediaMonitor, _ngEl: ElementRef, _renderer: Renderer2) {\n    this._base = new BaseFxDirectiveAdapter('style', monitor, _ngEl, _renderer);\n    this._buildCacheInterceptor();\n  }\n\n  /**\n   * Build intercept to convert raw strings to ngStyleMap\n   */\n  protected _buildCacheInterceptor() {\n    let cacheInput = this._base.cacheInput.bind(this._base);\n    this._base.cacheInput = (key?: string, source?: any, cacheRaw = false, merge = true) => {\n      let styles = this._buildStyleMap(source);\n      if (merge) {\n        styles = extendObject({}, this._base.inputMap['style'], styles);\n      }\n      cacheInput(key, styles, cacheRaw);\n    };\n  }\n  /**\n   * Convert raw strings to ngStyleMap; which is required by ngStyle\n   * NOTE: Raw string key-value pairs MUST be delimited by `;`\n   *       Comma-delimiters are not supported due to complexities of\n   *       possible style values such as `rgba(x,x,x,x)` and others\n   */\n  protected _buildStyleMap(styles: NgStyleType) {\n    let sanitizer: NgStyleSanitizer = (val: any) => {\n      // Always safe-guard (aka sanitize) style property values\n      return this._sanitizer.sanitize(SecurityContext.STYLE, val);\n    };\n    if (styles) {\n      switch ( _.getType(styles) ) {\n        case 'string':  return _.buildMapFromList(_.buildRawList(styles), sanitizer);\n        case 'array' :  return _.buildMapFromList(styles as NgStyleRawList, sanitizer);\n        case 'set'   :  return _.buildMapFromSet(styles, sanitizer);\n        default      :  return _.buildMapFromSet(styles, sanitizer);\n      }\n    }\n    return styles;\n  }\n\n  /**\n   * Special adapter to cross-cut responsive behaviors\n   * into the StyleDirective\n   */\n  protected _base: BaseFxDirectiveAdapter;\n\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport type NgStyleRawList = string[];\nexport type NgStyleMap = {[klass: string]: string};\n// NgStyle selectors accept NgStyleType values\nexport type NgStyleType = string | Set<string> | NgStyleRawList | NgStyleMap;\n\n/**\n * Callback function for SecurityContext.STYLE sanitization\n */\nexport type NgStyleSanitizer = (val: any) => string;\n\n/**\n * NgStyle allowed inputs\n */\nexport class NgStyleKeyValue {\n  constructor(public key: string, public value: string, noQuotes = true) {\n    this.key = noQuotes ? key.replace(/['\"]/g, '').trim() : key.trim();\n\n    this.value = noQuotes ? value.replace(/['\"]/g, '').trim() : value.trim();\n    this.value = this.value.replace(/;/, '');\n  }\n}\n\n/**\n * Transform Operators for @angular/flex-layout NgStyle Directive\n */\nexport const ngStyleUtils = {\n  getType,\n  buildRawList,\n  buildMapFromList,\n  buildMapFromSet\n};\n\nfunction getType(target: any): string {\n  let what = typeof target;\n  if (what === 'object') {\n    return (target.constructor === Array) ? 'array' :\n        (target.constructor === Set ) ? 'set' : 'object';\n  }\n  return what;\n}\n\n/**\n * Split string of key:value pairs into Array of k-v pairs\n * e.g.  'key:value; key:value; key:value;' -> ['key:value',...]\n */\nfunction buildRawList(source: any, delimiter = ';'): NgStyleRawList {\n  return String(source)\n      .trim()\n      .split(delimiter)\n      .map((val: string) => val.trim())\n      .filter(val => val !== '');\n}\n\n/**\n * Convert array of key:value strings to a iterable map object\n */\nfunction buildMapFromList(styles: NgStyleRawList, sanitize?: NgStyleSanitizer): NgStyleMap {\n  let sanitizeValue = (it: NgStyleKeyValue) => {\n    if (sanitize) {\n      it.value = sanitize(it.value);\n    }\n    return it;\n  };\n\n  return styles\n      .map(stringToKeyValue)\n      .filter(entry => !!entry)\n      .map(sanitizeValue)\n      .reduce(keyValuesToMap, {});\n}\n\n/**\n * Convert Set<string> or raw Object to an iterable NgStyleMap\n */\nfunction buildMapFromSet(source: any, sanitize?: NgStyleSanitizer): NgStyleMap {\n  let list = new Array<string>();\n  if (getType(source) == 'set') {\n    source.forEach(entry => list.push(entry));\n  } else {                                // simple hashmap\n    Object.keys(source).forEach(key => {\n      list.push(`${key}:${source[key]}`);\n    });\n  }\n  return buildMapFromList(list, sanitize);\n}\n\n\n/**\n * Convert 'key:value' -> [key, value]\n */\nfunction stringToKeyValue(it: string): NgStyleKeyValue {\n  let [key, val] = it.split(':');\n  return val ? new NgStyleKeyValue(key, val) : null;\n}\n\n/**\n * Convert [ [key,value] ] -> { key : value }\n */\nfunction keyValuesToMap(map: NgStyleMap, entry: NgStyleKeyValue): NgStyleMap {\n  if (!!entry.key) {\n    map[entry.key] = entry.value;\n  }\n  return map;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  DoCheck,\n  ElementRef,\n  Input,\n  IterableDiffers,\n  KeyValueDiffers,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Renderer,\n  Renderer2,\n  SimpleChanges,\n  Self\n} from '@angular/core';\nimport {NgClass} from '@angular/common';\n\nimport {BaseFxDirective} from './base';\nimport {BaseFxDirectiveAdapter} from './base-adapter';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\n/** NgClass allowed inputs **/\nexport type NgClassType = string | string[] | Set<string> | {[klass: string]: any};\n\n/**\n * Directive to add responsive support for ngClass.\n */\n@Directive({\n  selector: `\n    [class], [class.xs], [class.sm], [class.md], [class.lg], [class.xl],\n    [class.lt-sm], [class.lt-md], [class.lt-lg], [class.lt-xl],\n    [class.gt-xs], [class.gt-sm], [class.gt-md], [class.gt-lg],\n\n    [ngClass], [ngClass.xs], [ngClass.sm], [ngClass.md], [ngClass.lg], [ngClass.xl],\n    [ngClass.lt-sm], [ngClass.lt-md], [ngClass.lt-lg], [ngClass.lt-xl],\n    [ngClass.gt-xs], [ngClass.gt-sm], [ngClass.gt-md], [ngClass.gt-lg]\n  `\n})\nexport class ClassDirective extends BaseFxDirective\n    implements DoCheck, OnChanges, OnDestroy {\n\n  /**\n   * Intercept ngClass assignments so we cache the default classes\n   * which are merged with activated styles or used as fallbacks.\n   * Note: Base ngClass values are applied during ngDoCheck()\n   */\n  @Input('ngClass')\n  set ngClassBase(val: NgClassType) {\n    this._ngClassAdapter.cacheInput('ngClass', val, true);\n    this._ngClassInstance.ngClass = val;\n  }\n\n  /* tslint:disable */\n  @Input('ngClass.xs')    set ngClassXs(val:   NgClassType) { this._ngClassAdapter.cacheInput('ngClassXs',   val, true); }\n  @Input('ngClass.sm')    set ngClassSm(val:   NgClassType) { this._ngClassAdapter.cacheInput('ngClassSm',   val, true); }\n  @Input('ngClass.md')    set ngClassMd(val:   NgClassType) { this._ngClassAdapter.cacheInput('ngClassMd',   val, true); }\n  @Input('ngClass.lg')    set ngClassLg(val:   NgClassType) { this._ngClassAdapter.cacheInput('ngClassLg',   val, true); }\n  @Input('ngClass.xl')    set ngClassXl(val:   NgClassType) { this._ngClassAdapter.cacheInput('ngClassXl',   val, true); }\n\n  @Input('ngClass.lt-sm') set ngClassLtSm(val: NgClassType) { this._ngClassAdapter.cacheInput('ngClassLtSm', val, true); }\n  @Input('ngClass.lt-md') set ngClassLtMd(val: NgClassType) { this._ngClassAdapter.cacheInput('ngClassLtMd', val, true); }\n  @Input('ngClass.lt-lg') set ngClassLtLg(val: NgClassType) { this._ngClassAdapter.cacheInput('ngClassLtLg', val, true); }\n  @Input('ngClass.lt-xl') set ngClassLtXl(val: NgClassType) { this._ngClassAdapter.cacheInput('ngClassLtXl', val, true); }\n\n  @Input('ngClass.gt-xs') set ngClassGtXs(val: NgClassType) { this._ngClassAdapter.cacheInput('ngClassGtXs', val, true); }\n  @Input('ngClass.gt-sm') set ngClassGtSm(val: NgClassType) { this._ngClassAdapter.cacheInput('ngClassGtSm', val, true); }\n  @Input('ngClass.gt-md') set ngClassGtMd(val: NgClassType) { this._ngClassAdapter.cacheInput('ngClassGtMd', val, true); }\n  @Input('ngClass.gt-lg') set ngClassGtLg(val: NgClassType) { this._ngClassAdapter.cacheInput('ngClassGtLg', val, true); }\n\n  /** Deprecated selectors */\n\n  /**\n   * Base class selector values get applied immediately and are considered destructive overwrites to\n   * all previous class assignments\n   *\n   * Delegate to NgClass:klass setter and cache value for base fallback from responsive APIs.\n   */\n  @Input('class')\n  set classBase(val: string) {\n    this._classAdapter.cacheInput('_rawClass', val, true);\n    this._ngClassInstance.klass = val;\n  }\n\n  @Input('class.xs')      set classXs(val:   NgClassType) { this._classAdapter.cacheInput('classXs',   val, true); }\n  @Input('class.sm')      set classSm(val:   NgClassType) { this._classAdapter.cacheInput('classSm',   val, true); }\n  @Input('class.md')      set classMd(val:   NgClassType) { this._classAdapter.cacheInput('classMd',   val, true); }\n  @Input('class.lg')      set classLg(val:   NgClassType) { this._classAdapter.cacheInput('classLg',   val, true); }\n  @Input('class.xl')      set classXl(val:   NgClassType) { this._classAdapter.cacheInput('classXl',   val, true); }\n\n  @Input('class.lt-sm')   set classLtSm(val: NgClassType) { this._classAdapter.cacheInput('classLtSm', val, true); }\n  @Input('class.lt-md')   set classLtMd(val: NgClassType) { this._classAdapter.cacheInput('classLtMd', val, true); }\n  @Input('class.lt-lg')   set classLtLg(val: NgClassType) { this._classAdapter.cacheInput('classLtLg', val, true); }\n  @Input('class.lt-xl')   set classLtXl(val: NgClassType) { this._classAdapter.cacheInput('classLtXl', val, true); }\n\n  @Input('class.gt-xs')   set classGtXs(val: NgClassType) { this._classAdapter.cacheInput('classGtXs', val, true); }\n  @Input('class.gt-sm')   set classGtSm(val: NgClassType) { this._classAdapter.cacheInput('classGtSm', val, true); }\n  @Input('class.gt-md')   set classGtMd(val: NgClassType) { this._classAdapter.cacheInput('classGtMd', val, true); }\n  @Input('class.gt-lg')   set classGtLg(val: NgClassType) { this._classAdapter.cacheInput('classGtLg', val, true); }\n\n  /**\n   * Initial value of the `class` attribute; used as\n   * fallback and will be merged with nay `ngClass` values\n   */\n  get initialClasses() : string {\n    return  this._classAdapter.queryInput('_rawClass') || \"\";\n  }\n\n  /* tslint:enable */\n  constructor(protected monitor: MediaMonitor,\n              _ngEl: ElementRef, _renderer: Renderer2, _oldRenderer: Renderer,\n              _iterableDiffers: IterableDiffers, _keyValueDiffers: KeyValueDiffers,\n              @Optional() @Self() private _ngClassInstance: NgClass) {\n\n    super(monitor, _ngEl, _renderer);\n\n    this._classAdapter = new BaseFxDirectiveAdapter('class', monitor, _ngEl, _renderer);\n    this._ngClassAdapter = new BaseFxDirectiveAdapter('ngClass', monitor, _ngEl, _renderer);\n\n    // Create an instance NgClass Directive instance only if `ngClass=\"\"` has NOT been defined on\n    // the same host element; since the responsive variations may be defined...\n    if ( !this._ngClassInstance ) {\n      this._ngClassInstance = new NgClass(_iterableDiffers, _keyValueDiffers, _ngEl, _oldRenderer);\n    }\n  }\n\n  // ******************************************************************\n  // Lifecycle Hooks\n  // ******************************************************************\n\n  /**\n   * For @Input changes on the current mq activation property\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.hasInitialized) {\n      if (this._classAdapter.activeKey in changes) {\n        this._updateKlass();\n      }\n      if (this._ngClassAdapter.activeKey in changes) {\n        this._updateNgClass();\n      }\n    }\n  }\n\n  /**\n   * For ChangeDetectionStrategy.onPush and ngOnChanges() updates\n   */\n  ngDoCheck() {\n    if (!this._classAdapter.hasMediaQueryListener) {\n      this._configureMQListener();\n    }\n    this._ngClassInstance.ngDoCheck();\n  }\n\n  ngOnDestroy() {\n    this._classAdapter.ngOnDestroy();\n    this._ngClassAdapter.ngOnDestroy();\n    this._ngClassInstance = null;\n  }\n\n  // ******************************************************************\n  // Internal Methods\n  // ******************************************************************\n\n  /**\n   * Build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  protected _configureMQListener() {\n    this._classAdapter.listenForMediaQueryChanges('class', '', (changes: MediaChange) => {\n      this._updateKlass(changes.value);\n    });\n\n    this._ngClassAdapter.listenForMediaQueryChanges('ngClass', '', (changes: MediaChange) => {\n      this._updateNgClass(changes.value);\n      this._ngClassInstance.ngDoCheck();    // trigger NgClass::_applyIterableChanges()\n    });\n  }\n\n  /**\n   *  Apply updates directly to the NgClass:klass property\n   *  ::ngDoCheck() is not needed\n   */\n  protected _updateKlass(value?: NgClassType) {\n    let klass = value || this._classAdapter.queryInput('class') || '';\n    if (this._classAdapter.mqActivation) {\n      klass = this._classAdapter.mqActivation.activatedInput;\n    }\n    this._ngClassInstance.klass = klass || this.initialClasses;\n  }\n\n  /**\n   *  Identify the activated input value and update the ngClass iterables...\n   *  needs ngDoCheck() to actually apply the values to the element\n   */\n  protected _updateNgClass(value?: NgClassType) {\n    if (this._ngClassAdapter.mqActivation) {\n      value = this._ngClassAdapter.mqActivation.activatedInput;\n    }\n\n    // Delegate subsequent activity to the NgClass logic\n    this._ngClassInstance.ngClass = value || '';\n  }\n\n  /**\n   * Special adapter to cross-cut responsive behaviors\n   * into the ClassDirective instance\n   */\n  protected _classAdapter: BaseFxDirectiveAdapter;   // used for `class.xxx` selectors\n  protected _ngClassAdapter: BaseFxDirectiveAdapter;   // used for `ngClass.xxx` selectors\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {ElementRef, Renderer2} from '@angular/core';\n\nimport {BaseFxDirective} from './base';\nimport {ResponsiveActivation} from './../responsive/responsive-activation';\nimport {MediaQuerySubscriber} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\n\n/**\n * Adapter to the BaseFxDirective abstract class so it can be used via composition.\n * @see BaseFxDirective\n */\nexport class BaseFxDirectiveAdapter extends BaseFxDirective {\n\n  /**\n   * Accessor to determine which @Input property is \"active\"\n   * e.g. which property value will be used.\n   */\n  get activeKey() {\n    let mqa = this._mqActivation;\n    let key = mqa ? mqa.activatedInputKey : this._baseKey;\n    // Note: ClassDirective::SimpleChanges uses 'klazz' instead of 'class' as a key\n    return (key === 'class') ? 'klazz' : key;\n  }\n\n  /** Hash map of all @Input keys/values defined/used */\n  get inputMap() {\n    return this._inputMap;\n  }\n\n  /**\n   * @see BaseFxDirective._mqActivation\n   */\n  get mqActivation(): ResponsiveActivation {\n    return this._mqActivation;\n  }\n\n  /**\n   * BaseFxDirectiveAdapter constructor\n   */\n  constructor(protected _baseKey: string,   // non-responsive @Input property name\n              protected _mediaMonitor: MediaMonitor,\n              protected _elementRef: ElementRef,\n              protected _renderer: Renderer2) {\n    super(_mediaMonitor, _elementRef, _renderer);\n  }\n\n\n  /**\n   * @see BaseFxDirective._queryInput\n   */\n  queryInput(key) {\n    return key ? this._queryInput(key) : undefined;\n  }\n\n  /**\n   *  Save the property value.\n   */\n  cacheInput(key?: string, source?: any, cacheRaw = false) {\n    if (cacheRaw) {\n      this._cacheInputRaw(key, source);\n    } else if (Array.isArray(source)) {\n      this._cacheInputArray(key, source);\n    } else if (typeof source === 'object') {\n      this._cacheInputObject(key, source);\n    } else if (typeof source === 'string') {\n      this._cacheInputString(key, source);\n    } else {\n      throw new Error('Invalid class value provided. Did you want to cache the raw value?');\n    }\n  }\n\n  /**\n   * @see BaseFxDirective._listenForMediaQueryChanges\n   */\n  listenForMediaQueryChanges(key: string,\n                             defaultValue: any,\n                             onMediaQueryChange: MediaQuerySubscriber): ResponsiveActivation {\n    return this._listenForMediaQueryChanges(key, defaultValue, onMediaQueryChange);\n  }\n\n  // ************************************************************\n  // Protected Methods\n  // ************************************************************\n\n  /**\n   * No implicit transforms of the source.\n   * Required when caching values expected later for KeyValueDiffers\n   */\n  protected _cacheInputRaw(key?: string, source?: any) {\n    this._inputMap[key] = source;\n  }\n\n  /**\n   *  Save the property value for Array values.\n   */\n  protected _cacheInputArray(key = '', source?: boolean[]) {\n    this._inputMap[key] = source.join(' ');\n  }\n\n  /**\n   *  Save the property value for key/value pair values.\n   */\n  protected _cacheInputObject(key = '', source?: { [key: string]: boolean }) {\n    let classes = [];\n    for (let prop in source) {\n      if (!!source[prop]) {\n        classes.push(prop);\n      }\n    }\n    this._inputMap[key] = classes.join(' ');\n  }\n\n  /**\n   *  Save the property value for string values.\n   */\n  protected _cacheInputString(key = '', source?: string) {\n    this._inputMap[key] = source;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  Renderer2,\n  SimpleChanges,\n  Self,\n  AfterContentInit,\n  Optional,\n  OnDestroy,\n  NgZone,\n} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {BaseFxDirective} from './base';\nimport {LayoutDirective} from './layout';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {LAYOUT_VALUES} from '../../utils/layout-validator';\n\n/**\n * 'layout-padding' styling directive\n *  Defines padding of child elements in a layout container\n */\n@Directive({\n  selector: `\n  [fxLayoutGap],\n  [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md], [fxLayoutGap.lg], [fxLayoutGap.xl],\n  [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md], [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl],\n  [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm], [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]\n`\n})\nexport class LayoutGapDirective extends BaseFxDirective implements AfterContentInit, OnChanges,\n    OnDestroy {\n  protected _layout = 'row';  // default flex-direction\n  protected _layoutWatcher: Subscription;\n  protected _observer: MutationObserver;\n\n  /* tslint:disable */\n @Input('fxLayoutGap')       set gap(val) { this._cacheInput('gap', val); }\n @Input('fxLayoutGap.xs')    set gapXs(val) { this._cacheInput('gapXs', val); }\n @Input('fxLayoutGap.sm')    set gapSm(val) { this._cacheInput('gapSm', val); };\n @Input('fxLayoutGap.md')    set gapMd(val) { this._cacheInput('gapMd', val); };\n @Input('fxLayoutGap.lg')    set gapLg(val) { this._cacheInput('gapLg', val); };\n @Input('fxLayoutGap.xl')    set gapXl(val) { this._cacheInput('gapXl', val); };\n\n @Input('fxLayoutGap.gt-xs') set gapGtXs(val) { this._cacheInput('gapGtXs', val); };\n @Input('fxLayoutGap.gt-sm') set gapGtSm(val) { this._cacheInput('gapGtSm', val); };\n @Input('fxLayoutGap.gt-md') set gapGtMd(val) { this._cacheInput('gapGtMd', val); };\n @Input('fxLayoutGap.gt-lg') set gapGtLg(val) { this._cacheInput('gapGtLg', val); };\n\n @Input('fxLayoutGap.lt-sm') set gapLtSm(val) { this._cacheInput('gapLtSm', val); };\n @Input('fxLayoutGap.lt-md') set gapLtMd(val) { this._cacheInput('gapLtMd', val); };\n @Input('fxLayoutGap.lt-lg') set gapLtLg(val) { this._cacheInput('gapLtLg', val); };\n @Input('fxLayoutGap.lt-xl') set gapLtXl(val) { this._cacheInput('gapLtXl', val); };\n\n  /* tslint:enable */\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              renderer: Renderer2,\n              @Optional() @Self() container: LayoutDirective,\n              private _zone: NgZone) {\n    super(monitor, elRef, renderer);\n\n    if (container) {  // Subscribe to layout direction changes\n      this._layoutWatcher = container.layout$.subscribe(this._onLayoutChange.bind(this));\n    }\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['gap'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngAfterContentInit() {\n    this._watchContentChanges();\n    this._listenForMediaQueryChanges('gap', '0', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n    if (this._observer) {\n      this._observer.disconnect();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Watch for child nodes to be added... and apply the layout gap styles to each.\n   * NOTE: this does NOT! differentiate between viewChildren and contentChildren\n   */\n  protected _watchContentChanges() {\n    this._zone.runOutsideAngular(() => {\n\n      if (typeof MutationObserver !== 'undefined') {\n        this._observer = new MutationObserver((mutations: MutationRecord[]) => {\n          let validatedChanges = (it: MutationRecord): boolean => {\n            return (it.addedNodes && it.addedNodes.length > 0) ||\n                (it.removedNodes && it.removedNodes.length > 0);\n          };\n\n          // update gap styles only for child 'added' or 'removed' events\n          if (mutations.some(validatedChanges)) {\n            this._updateWithValue();\n          }\n        });\n        this._observer.observe(this._elementRef.nativeElement, {childList: true});\n      }\n    });\n  }\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'margin' styles\n   */\n  protected _onLayoutChange(direction) {\n    this._layout = (direction || '').toLowerCase();\n    if (!LAYOUT_VALUES.find(x => x === this._layout)) {\n      this._layout = 'row';\n    }\n    this._updateWithValue();\n  }\n\n  /**\n   *\n   */\n  protected _updateWithValue(value?: string) {\n    value = value || this._queryInput('gap') || '0';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    // Gather all non-hidden Element nodes\n    let items = this.childrenNodes\n        .filter(el => el.nodeType === 1 && this._getDisplayStyle(el) != 'none');\n    let numItems = items.length;\n\n    if (numItems > 1) {\n      let lastItem = items[numItems - 1];\n\n      // For each `element` children EXCEPT the last,\n      // set the margin right/bottom styles...\n      items = items.filter((_, j) => j < numItems - 1);\n      this._applyStyleToElements(this._buildCSS(value), items);\n\n      // Clear all gaps for all visible elements\n      this._applyStyleToElements(this._buildCSS(), [lastItem]);\n    }\n  }\n\n  /**\n   * Prepare margin CSS, remove any previous explicitly\n   * assigned margin assignments\n   */\n  private _buildCSS(value: any = null) {\n    let key, margins = {\n      'margin-left': null,\n      'margin-right': null,\n      'margin-top': null,\n      'margin-bottom': null\n    };\n\n    switch (this._layout) {\n      case 'column':\n      case 'column-reverse':\n        key = 'margin-bottom';\n        break;\n      case 'row' :\n      case 'row-reverse':\n      default :\n        key = 'margin-right';\n        break;\n    }\n    margins[key] = value;\n\n    return margins;\n  }\n\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Renderer2,\n  SimpleChanges, Self,\n} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\nimport {extendObject} from '../../utils/object-extend';\n\nimport {BaseFxDirective} from './base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\nimport {LayoutDirective} from './layout';\nimport {LAYOUT_VALUES, isFlowHorizontal} from '../../utils/layout-validator';\n\n/**\n * 'layout-align' flexbox styling directive\n *  Defines positioning of child elements along main and cross axis in a layout container\n *  Optional values: {main-axis} values or {main-axis cross-axis} value pairs\n *\n *  @see https://css-tricks.com/almanac/properties/j/justify-content/\n *  @see https://css-tricks.com/almanac/properties/a/align-items/\n *  @see https://css-tricks.com/almanac/properties/a/align-content/\n */\n@Directive({selector: `\n  [fxLayoutAlign],\n  [fxLayoutAlign.xs], [fxLayoutAlign.sm], [fxLayoutAlign.md], [fxLayoutAlign.lg],[fxLayoutAlign.xl],\n  [fxLayoutAlign.lt-sm], [fxLayoutAlign.lt-md], [fxLayoutAlign.lt-lg], [fxLayoutAlign.lt-xl],\n  [fxLayoutAlign.gt-xs], [fxLayoutAlign.gt-sm], [fxLayoutAlign.gt-md], [fxLayoutAlign.gt-lg]\n`})\nexport class LayoutAlignDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  protected _layout = 'row';  // default flex-direction\n  protected _layoutWatcher: Subscription;\n\n  /* tslint:disable */\n  @Input('fxLayoutAlign')       set align(val)     { this._cacheInput('align', val); }\n  @Input('fxLayoutAlign.xs')    set alignXs(val)   { this._cacheInput('alignXs', val); }\n  @Input('fxLayoutAlign.sm')    set alignSm(val)   { this._cacheInput('alignSm', val); };\n  @Input('fxLayoutAlign.md')    set alignMd(val)   { this._cacheInput('alignMd', val); };\n  @Input('fxLayoutAlign.lg')    set alignLg(val)   { this._cacheInput('alignLg', val); };\n  @Input('fxLayoutAlign.xl')    set alignXl(val)   { this._cacheInput('alignXl', val); };\n\n  @Input('fxLayoutAlign.gt-xs') set alignGtXs(val) { this._cacheInput('alignGtXs', val); };\n  @Input('fxLayoutAlign.gt-sm') set alignGtSm(val) { this._cacheInput('alignGtSm', val); };\n  @Input('fxLayoutAlign.gt-md') set alignGtMd(val) { this._cacheInput('alignGtMd', val); };\n  @Input('fxLayoutAlign.gt-lg') set alignGtLg(val) { this._cacheInput('alignGtLg', val); };\n\n  @Input('fxLayoutAlign.lt-sm') set alignLtSm(val) { this._cacheInput('alignLtSm', val); };\n  @Input('fxLayoutAlign.lt-md') set alignLtMd(val) { this._cacheInput('alignLtMd', val); };\n  @Input('fxLayoutAlign.lt-lg') set alignLtLg(val) { this._cacheInput('alignLtLg', val); };\n  @Input('fxLayoutAlign.lt-xl') set alignLtXl(val) { this._cacheInput('alignLtXl', val); };\n\n  /* tslint:enable */\n  constructor(\n      monitor: MediaMonitor,\n      elRef: ElementRef, renderer: Renderer2,\n      @Optional() @Self() container: LayoutDirective) {\n    super(monitor, elRef, renderer);\n\n    if (container) {  // Subscribe to layout direction changes\n      this._layoutWatcher = container.layout$.subscribe(this._onLayoutChange.bind(this));\n    }\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['align'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('align', 'start stretch', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if ( this._layoutWatcher ) {\n      this._layoutWatcher.unsubscribe();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   *\n   */\n  protected _updateWithValue(value?: string) {\n    value = value || this._queryInput('align') || 'start stretch';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    this._applyStyleToElement(this._buildCSS(value));\n    this._allowStretching(value, !this._layout ? 'row' : this._layout);\n  }\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'flex' styles\n   */\n  protected _onLayoutChange(direction) {\n    this._layout = (direction || '').toLowerCase();\n    if (!LAYOUT_VALUES.find(x => x === this._layout)) {\n      this._layout = 'row';\n    }\n\n    let value = this._queryInput('align') || 'start stretch';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n    this._allowStretching(value, this._layout || 'row');\n  }\n\n  protected _buildCSS(align) {\n    let css = {}, [main_axis, cross_axis] = align.split(' '); // tslint:disable-line:variable-name\n\n    // Main axis\n    switch (main_axis) {\n      case 'center':\n        css['justify-content'] = 'center';\n        break;\n      case 'space-around':\n        css['justify-content'] = 'space-around';\n        break;\n      case 'space-between':\n        css['justify-content'] = 'space-between';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['justify-content'] = 'flex-end';\n        break;\n      case 'start':\n      case 'flex-start':\n      default :\n        css['justify-content'] = 'flex-start';  // default main axis\n        break;\n    }\n\n    // Cross-axis\n    switch (cross_axis) {\n      case 'start':\n      case 'flex-start':\n        css['align-items'] = css['align-content'] = 'flex-start';\n        break;\n      case 'baseline':\n        css['align-items'] = 'baseline';\n        break;\n      case 'center':\n        css['align-items'] = css['align-content'] = 'center';\n        break;\n      case 'end':\n      case 'flex-end':\n        css['align-items'] = css['align-content'] = 'flex-end';\n        break;\n      case 'stretch':\n      default : // 'stretch'\n        css['align-items'] = css['align-content'] = 'stretch';   // default cross axis\n        break;\n    }\n\n    return extendObject(css, {\n      'display' : 'flex',\n      'flex-direction' : this._layout || 'row',\n      'box-sizing' : 'border-box'\n    });\n  }\n\n\n  /**\n   * Update container element to 'stretch' as needed...\n   * NOTE: this is only done if the crossAxis is explicitly set to 'stretch'\n   */\n  protected _allowStretching(align, layout) {\n    let [, cross_axis] = align.split(' '); // tslint:disable-line:variable-name\n\n    if (cross_axis == 'stretch') {\n      // Use `null` values to remove style\n      this._applyStyleToElement({\n        'box-sizing': 'border-box',\n        'max-width': !isFlowHorizontal(layout) ? '100%' : null,\n        'max-height': isFlowHorizontal(layout) ? '100%' : null\n      });\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  Renderer2,\n  SimpleChanges,\n} from '@angular/core';\n\nimport {BaseFxDirective} from './base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\n/**\n * 'flex-order' flexbox styling directive\n * Configures the positional ordering of the element in a sorted layout container\n * @see https://css-tricks.com/almanac/properties/o/order/\n */\n@Directive({selector: `\n  [fxFlexOrder],\n  [fxFlexOrder.xs], [fxFlexOrder.sm], [fxFlexOrder.md], [fxFlexOrder.lg], [fxFlexOrder.xl],\n  [fxFlexOrder.lt-sm], [fxFlexOrder.lt-md], [fxFlexOrder.lt-lg], [fxFlexOrder.lt-xl],\n  [fxFlexOrder.gt-xs], [fxFlexOrder.gt-sm], [fxFlexOrder.gt-md], [fxFlexOrder.gt-lg]\n`})\nexport class FlexOrderDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /* tslint:disable */\n  @Input('fxFlexOrder')       set order(val)     { this._cacheInput('order', val); }\n  @Input('fxFlexOrder.xs')    set orderXs(val)   { this._cacheInput('orderXs', val); }\n  @Input('fxFlexOrder.sm')    set orderSm(val)   { this._cacheInput('orderSm', val); };\n  @Input('fxFlexOrder.md')    set orderMd(val)   { this._cacheInput('orderMd', val); };\n  @Input('fxFlexOrder.lg')    set orderLg(val)   { this._cacheInput('orderLg', val); };\n  @Input('fxFlexOrder.xl')    set orderXl(val)   { this._cacheInput('orderXl', val); };\n\n  @Input('fxFlexOrder.gt-xs') set orderGtXs(val) { this._cacheInput('orderGtXs', val); };\n  @Input('fxFlexOrder.gt-sm') set orderGtSm(val) { this._cacheInput('orderGtSm', val); };\n  @Input('fxFlexOrder.gt-md') set orderGtMd(val) { this._cacheInput('orderGtMd', val); };\n  @Input('fxFlexOrder.gt-lg') set orderGtLg(val) { this._cacheInput('orderGtLg', val); };\n\n  @Input('fxFlexOrder.lt-sm') set orderLtSm(val) { this._cacheInput('orderLtSm', val); };\n  @Input('fxFlexOrder.lt-md') set orderLtMd(val) { this._cacheInput('orderLtMd', val); };\n  @Input('fxFlexOrder.lt-lg') set orderLtLg(val) { this._cacheInput('orderLtLg', val); };\n  @Input('fxFlexOrder.lt-xl') set orderLtXl(val) { this._cacheInput('orderLtXl', val); };\n\n  /* tslint:enable */\n  constructor(monitor: MediaMonitor, elRef: ElementRef, renderer: Renderer2) {\n    super(monitor, elRef, renderer);\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['order'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('order', '0', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected _updateWithValue(value?: string) {\n    value = value || this._queryInput('order') || '0';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    this._applyStyleToElement(this._buildCSS(value));\n  }\n\n\n  protected _buildCSS(value) {\n    value = parseInt(value, 10);\n    return {order: isNaN(value) ? 0 : value};\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Renderer2,\n  SimpleChanges,\n  SkipSelf\n} from '@angular/core';\n\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {BaseFxDirective} from './base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {LayoutDirective} from './layout';\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\n/**\n * 'flex-offset' flexbox styling directive\n * Configures the 'margin-left' of the element in a layout container\n */\n@Directive({selector: `\n  [fxFlexOffset],\n  [fxFlexOffset.xs], [fxFlexOffset.sm], [fxFlexOffset.md], [fxFlexOffset.lg], [fxFlexOffset.xl],\n  [fxFlexOffset.lt-sm], [fxFlexOffset.lt-md], [fxFlexOffset.lt-lg], [fxFlexOffset.lt-xl],\n  [fxFlexOffset.gt-xs], [fxFlexOffset.gt-sm], [fxFlexOffset.gt-md], [fxFlexOffset.gt-lg]\n`})\nexport class FlexOffsetDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /* tslint:disable */\n  @Input('fxFlexOffset')       set offset(val)     { this._cacheInput('offset', val); }\n  @Input('fxFlexOffset.xs')    set offsetXs(val)   { this._cacheInput('offsetXs', val); }\n  @Input('fxFlexOffset.sm')    set offsetSm(val)   { this._cacheInput('offsetSm', val); };\n  @Input('fxFlexOffset.md')    set offsetMd(val)   { this._cacheInput('offsetMd', val); };\n  @Input('fxFlexOffset.lg')    set offsetLg(val)   { this._cacheInput('offsetLg', val); };\n  @Input('fxFlexOffset.xl')    set offsetXl(val)   { this._cacheInput('offsetXl', val); };\n\n  @Input('fxFlexOffset.lt-sm') set offsetLtSm(val) { this._cacheInput('offsetLtSm', val); };\n  @Input('fxFlexOffset.lt-md') set offsetLtMd(val) { this._cacheInput('offsetLtMd', val); };\n  @Input('fxFlexOffset.lt-lg') set offsetLtLg(val) { this._cacheInput('offsetLtLg', val); };\n  @Input('fxFlexOffset.lt-xl') set offsetLtXl(val) { this._cacheInput('offsetLtXl', val); };\n\n  @Input('fxFlexOffset.gt-xs') set offsetGtXs(val) { this._cacheInput('offsetGtXs', val); };\n  @Input('fxFlexOffset.gt-sm') set offsetGtSm(val) { this._cacheInput('offsetGtSm', val); };\n  @Input('fxFlexOffset.gt-md') set offsetGtMd(val) { this._cacheInput('offsetGtMd', val); };\n  @Input('fxFlexOffset.gt-lg') set offsetGtLg(val) { this._cacheInput('offsetGtLg', val); };\n\n  /* tslint:enable */\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              renderer: Renderer2,\n              @Optional() @SkipSelf() protected _container: LayoutDirective ) {\n    super(monitor, elRef, renderer);\n\n\n    this.watchParentFlow();\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['offset'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * Cleanup\n   */\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('offset', 0 , (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /** The flex-direction of this element's host container. Defaults to 'row'. */\n  protected _layout = 'row';\n\n  /**\n   * Subscription to the parent flex container's layout changes.\n   * Stored so we can unsubscribe when this directive is destroyed.\n   */\n  protected _layoutWatcher: Subscription;\n\n  /**\n   * If parent flow-direction changes, then update the margin property\n   * used to offset\n   */\n  protected watchParentFlow() {\n    if (this._container) {\n      // Subscribe to layout immediate parent direction changes (if any)\n      this._layoutWatcher = this._container.layout$.subscribe((direction) => {\n        // `direction` === null if parent container does not have a `fxLayout`\n        this._onLayoutChange(direction);\n      });\n    }\n  }\n\n  /**\n   * Caches the parent container's 'flex-direction' and updates the element's style.\n   * Used as a handler for layout change events from the parent flex container.\n   */\n  protected _onLayoutChange(direction?: string) {\n    this._layout = direction || this._layout || 'row';\n    this._updateWithValue();\n  }\n\n  /**\n   * Using the current fxFlexOffset value, update the inline CSS\n   * NOTE: this will assign `margin-left` if the parent flex-direction == 'row',\n   *       otherwise `margin-top` is used for the offset.\n   */\n  protected _updateWithValue(value?: string|number) {\n    value = value || this._queryInput('offset') || 0;\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    this._applyStyleToElement(this._buildCSS(value));\n  }\n\n  protected _buildCSS(offset) {\n    let isPercent = String(offset).indexOf('%') > -1;\n    let isPx = String(offset).indexOf('px') > -1;\n    if (!isPx && !isPercent && !isNaN(offset)) {\n      offset = offset + '%';\n    }\n\n    // The flex-direction of this element's flex container. Defaults to 'row'.\n    let layout = this._getFlowDirection(this.parentElement, true);\n    return isFlowHorizontal(layout) ? {'margin-left': `${offset}`} : {'margin-top': `${offset}`};\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directive, ElementRef, Renderer2} from '@angular/core';\n\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {BaseFxDirective} from './base';\n\nconst FLEX_FILL_CSS = {\n  'margin': 0,\n  'width': '100%',\n  'height': '100%',\n  'min-width': '100%',\n  'min-height': '100%'\n};\n\n/**\n * 'fxFill' flexbox styling directive\n *  Maximizes width and height of element in a layout container\n *\n *  NOTE: fxFill is NOT responsive API!!\n */\n@Directive({selector: `\n  [fxFill],\n  [fxFlexFill]\n`})\nexport class FlexFillDirective extends BaseFxDirective {\n  constructor(monitor: MediaMonitor, public elRef: ElementRef, public renderer: Renderer2) {\n    super(monitor, elRef, renderer);\n    this._applyStyleToElement(FLEX_FILL_CSS);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  Renderer2,\n  SimpleChanges,\n} from '@angular/core';\n\nimport {BaseFxDirective} from './base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\n/**\n * 'flex-align' flexbox styling directive\n * Allows element-specific overrides for cross-axis alignments in a layout container\n * @see https://css-tricks.com/almanac/properties/a/align-self/\n */\n@Directive({\n  selector: `\n  [fxFlexAlign],\n  [fxFlexAlign.xs], [fxFlexAlign.sm], [fxFlexAlign.md], [fxFlexAlign.lg], [fxFlexAlign.xl],\n  [fxFlexAlign.lt-sm], [fxFlexAlign.lt-md], [fxFlexAlign.lt-lg], [fxFlexAlign.lt-xl],\n  [fxFlexAlign.gt-xs], [fxFlexAlign.gt-sm], [fxFlexAlign.gt-md], [fxFlexAlign.gt-lg]\n`\n})\nexport class FlexAlignDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /* tslint:disable */\n  @Input('fxFlexAlign')       set align(val)  { this._cacheInput('align', val);  };\n  @Input('fxFlexAlign.xs')    set alignXs(val)  { this._cacheInput('alignXs', val);  };\n  @Input('fxFlexAlign.sm')    set alignSm(val)  { this._cacheInput('alignSm', val); };\n  @Input('fxFlexAlign.md')    set alignMd(val)  { this._cacheInput('alignMd', val); };\n  @Input('fxFlexAlign.lg')    set alignLg(val)  { this._cacheInput('alignLg', val); };\n  @Input('fxFlexAlign.xl')    set alignXl(val)  { this._cacheInput('alignXl', val); };\n\n  @Input('fxFlexAlign.lt-sm') set alignLtSm(val) { this._cacheInput('alignLtSm', val); };\n  @Input('fxFlexAlign.lt-md') set alignLtMd(val) { this._cacheInput('alignLtMd', val); };\n  @Input('fxFlexAlign.lt-lg') set alignLtLg(val) { this._cacheInput('alignLtLg', val); };\n  @Input('fxFlexAlign.lt-xl') set alignLtXl(val) { this._cacheInput('alignLtXl', val); };\n\n  @Input('fxFlexAlign.gt-xs') set alignGtXs(val)  { this._cacheInput('alignGtXs', val); };\n  @Input('fxFlexAlign.gt-sm') set alignGtSm(val)  { this._cacheInput('alignGtSm', val); };\n  @Input('fxFlexAlign.gt-md') set alignGtMd(val)  { this._cacheInput('alignGtMd', val); };\n  @Input('fxFlexAlign.gt-lg') set alignGtLg(val)  { this._cacheInput('alignGtLg', val); };\n\n  /* tslint:enable */\n  constructor(monitor: MediaMonitor, elRef: ElementRef, renderer: Renderer2) {\n    super(monitor, elRef, renderer);\n  }\n\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['align'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('align', 'stretch', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  protected _updateWithValue(value?: string|number) {\n    value = value || this._queryInput('align') || 'stretch';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    this._applyStyleToElement(this._buildCSS(value));\n  }\n\n  protected _buildCSS(align) {\n    let css = {};\n\n    // Cross-axis\n    switch (align) {\n      case 'start':\n        css['align-self'] = 'flex-start';\n        break;\n      case 'end':\n        css['align-self'] = 'flex-end';\n        break;\n      default:\n        css['align-self'] = align;\n        break;\n    }\n\n    return css;\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  Renderer2,\n  SimpleChanges,\n  Self,\n  Optional\n} from '@angular/core';\n\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {BaseFxDirective} from './base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {LayoutDirective} from './layout';\n\nconst FALSY = ['false', false, 0];\n\n/**\n * For fxHide selectors, we invert the 'value'\n * and assign to the equivalent fxShow selector cache\n *  - When 'hide' === '' === true, do NOT show the element\n *  - When 'hide' === false or 0... we WILL show the element\n */\nexport function negativeOf(hide: any) {\n  return (hide === '') ? false :\n         ((hide === 'false') || (hide === 0)) ? true : !hide;\n}\n\n/**\n * 'show' Layout API directive\n *\n */\n@Directive({\n  selector: `\n  [fxShow],\n  [fxShow.xs], [fxShow.sm], [fxShow.md], [fxShow.lg], [fxShow.xl],\n  [fxShow.lt-sm], [fxShow.lt-md], [fxShow.lt-lg], [fxShow.lt-xl],\n  [fxShow.gt-xs], [fxShow.gt-sm], [fxShow.gt-md], [fxShow.gt-lg],\n  [fxHide],\n  [fxHide.xs], [fxHide.sm], [fxHide.md], [fxHide.lg], [fxHide.xl],\n  [fxHide.lt-sm], [fxHide.lt-md], [fxHide.lt-lg], [fxHide.lt-xl],\n  [fxHide.gt-xs], [fxHide.gt-sm], [fxHide.gt-md], [fxHide.gt-lg]\n`\n})\nexport class ShowHideDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /**\n   * Subscription to the parent flex container's layout changes.\n   * Stored so we can unsubscribe when this directive is destroyed.\n   */\n  protected _layoutWatcher: Subscription;\n\n  /* tslint:disable */\n  @Input('fxShow')       set show(val) {  this._cacheInput('show', val);  }\n  @Input('fxShow.xs')    set showXs(val) {this._cacheInput('showXs', val);}\n  @Input('fxShow.sm')    set showSm(val) {this._cacheInput('showSm', val); };\n  @Input('fxShow.md')    set showMd(val) {this._cacheInput('showMd', val); };\n  @Input('fxShow.lg')    set showLg(val) {this._cacheInput('showLg', val); };\n  @Input('fxShow.xl')    set showXl(val) {this._cacheInput('showXl', val); };\n\n  @Input('fxShow.lt-sm') set showLtSm(val) { this._cacheInput('showLtSm', val); };\n  @Input('fxShow.lt-md') set showLtMd(val) { this._cacheInput('showLtMd', val); };\n  @Input('fxShow.lt-lg') set showLtLg(val) { this._cacheInput('showLtLg', val); };\n  @Input('fxShow.lt-xl') set showLtXl(val) { this._cacheInput('showLtXl', val); };\n\n  @Input('fxShow.gt-xs') set showGtXs(val) {this._cacheInput('showGtXs', val); };\n  @Input('fxShow.gt-sm') set showGtSm(val) {this._cacheInput('showGtSm', val); };\n  @Input('fxShow.gt-md') set showGtMd(val) {this._cacheInput('showGtMd', val); };\n  @Input('fxShow.gt-lg') set showGtLg(val) {this._cacheInput('showGtLg', val); };\n\n  @Input('fxHide')       set hide(val) {this._cacheInput('show', negativeOf(val));}\n  @Input('fxHide.xs')    set hideXs(val) {this._cacheInput('showXs', negativeOf(val));}\n  @Input('fxHide.sm')    set hideSm(val) {this._cacheInput('showSm', negativeOf(val)); };\n  @Input('fxHide.md')    set hideMd(val) {this._cacheInput('showMd', negativeOf(val)); };\n  @Input('fxHide.lg')    set hideLg(val) {this._cacheInput('showLg', negativeOf(val)); };\n  @Input('fxHide.xl')    set hideXl(val) {this._cacheInput('showXl', negativeOf(val)); };\n\n  @Input('fxHide.lt-sm') set hideLtSm(val) { this._cacheInput('showLtSm', negativeOf(val)); };\n  @Input('fxHide.lt-md') set hideLtMd(val) { this._cacheInput('showLtMd', negativeOf(val)); };\n  @Input('fxHide.lt-lg') set hideLtLg(val) { this._cacheInput('showLtLg', negativeOf(val)); };\n  @Input('fxHide.lt-xl') set hideLtXl(val) { this._cacheInput('showLtXl', negativeOf(val)); };\n\n  @Input('fxHide.gt-xs') set hideGtXs(val) {this._cacheInput('showGtXs', negativeOf(val)); };\n  @Input('fxHide.gt-sm') set hideGtSm(val) {this._cacheInput('showGtSm', negativeOf(val)); };\n  @Input('fxHide.gt-md') set hideGtMd(val) {this._cacheInput('showGtMd', negativeOf(val)); };\n  @Input('fxHide.gt-lg') set hideGtLg(val) {this._cacheInput('showGtLg', negativeOf(val)); };\n\n  /* tslint:enable */\n  /**\n   *\n   */\n  constructor(monitor: MediaMonitor,\n              @Optional() @Self() protected _layout: LayoutDirective,\n              protected elRef: ElementRef,\n              protected renderer: Renderer2) {\n\n    super(monitor, elRef, renderer);\n\n    if (_layout) {\n      /**\n       * The Layout can set the display:flex (and incorrectly affect the Hide/Show directives.\n       * Whenever Layout [on the same element] resets its CSS, then update the Hide/Show CSS\n       */\n      this._layoutWatcher = _layout.layout$.subscribe(() => this._updateWithValue());\n    }\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * Override accessor to the current HTMLElement's `display` style\n   * Note: Show/Hide will not change the display to 'flex' but will set it to 'block'\n   * unless it was already explicitly specified inline or in a CSS stylesheet.\n   */\n  protected _getDisplayStyle(): string {\n    return this._layout ? 'flex' : super._getDisplayStyle();\n  }\n\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxShow')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.hasInitialized && (changes['show'] != null || this._mqActivation)) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    let value = this._getDefaultVal('show', true);\n    // Build _mqActivation controller\n    this._listenForMediaQueryChanges('show', value, (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n\n    this._updateWithValue();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /** Validate the visibility value and then update the host's inline display style */\n  protected _updateWithValue(value?: string|number|boolean) {\n    value = value || this._getDefaultVal('show', true);\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    let shouldShow = this._validateTruthy(value);\n    this._applyStyleToElement(this._buildCSS(shouldShow));\n  }\n\n\n  /** Build the CSS that should be assigned to the element instance */\n  protected _buildCSS(show) {\n    return {'display': show ? this._display : 'none'};\n  }\n\n  /**  Validate the to be not FALSY */\n  _validateTruthy(show) {\n    return (FALSY.indexOf(show) == -1);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n import {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Renderer2,\n  SimpleChanges,\n  SkipSelf,\n} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\nimport {extendObject} from '../../utils/object-extend';\n\nimport {BaseFxDirective} from './base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\nimport {LayoutDirective} from './layout';\nimport {LayoutWrapDirective} from './layout-wrap';\nimport {validateBasis} from '../../utils/basis-validator';\nimport {isFlowHorizontal} from '../../utils/layout-validator';\n\n\n/** Built-in aliases for different flex-basis values. */\nexport type FlexBasisAlias = 'grow' | 'initial' | 'auto' | 'none' | 'nogrow' | 'noshrink';\n\n\n/**\n * Directive to control the size of a flex item using flex-basis, flex-grow, and flex-shrink.\n * Corresponds to the css `flex` shorthand property.\n *\n * @see https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n */\n@Directive({selector: `\n  [fxFlex],\n  [fxFlex.xs], [fxFlex.sm], [fxFlex.md], [fxFlex.lg], [fxFlex.xl],\n  [fxFlex.lt-sm], [fxFlex.lt-md], [fxFlex.lt-lg], [fxFlex.lt-xl],\n  [fxFlex.gt-xs], [fxFlex.gt-sm], [fxFlex.gt-md], [fxFlex.gt-lg],\n`\n})\nexport class FlexDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /** The flex-direction of this element's flex container. Defaults to 'row'. */\n  protected _layout = 'row';\n\n  /**\n   * Subscription to the parent flex container's layout changes.\n   * Stored so we can unsubscribe when this directive is destroyed.\n   */\n  protected _layoutWatcher: Subscription;\n\n  /* tslint:disable */\n  @Input('fxShrink')     set shrink(val)    { this._cacheInput('shrink', val); };\n  @Input('fxGrow')       set grow(val)      { this._cacheInput('grow', val); };\n\n  @Input('fxFlex')       set flex(val)      { this._cacheInput('flex', val); };\n  @Input('fxFlex.xs')    set flexXs(val)    { this._cacheInput('flexXs', val); };\n  @Input('fxFlex.sm')    set flexSm(val)    { this._cacheInput('flexSm', val); };\n  @Input('fxFlex.md')    set flexMd(val)    { this._cacheInput('flexMd', val); };\n  @Input('fxFlex.lg')    set flexLg(val)    { this._cacheInput('flexLg', val); };\n  @Input('fxFlex.xl')    set flexXl(val)    { this._cacheInput('flexXl', val); };\n\n  @Input('fxFlex.gt-xs') set flexGtXs(val)  { this._cacheInput('flexGtXs', val); };\n  @Input('fxFlex.gt-sm') set flexGtSm(val)  { this._cacheInput('flexGtSm', val); };\n  @Input('fxFlex.gt-md') set flexGtMd(val)  { this._cacheInput('flexGtMd', val); };\n  @Input('fxFlex.gt-lg') set flexGtLg(val)  { this._cacheInput('flexGtLg', val); };\n\n  @Input('fxFlex.lt-sm') set flexLtSm(val) { this._cacheInput('flexLtSm', val); };\n  @Input('fxFlex.lt-md') set flexLtMd(val) { this._cacheInput('flexLtMd', val); };\n  @Input('fxFlex.lt-lg') set flexLtLg(val) { this._cacheInput('flexLtLg', val); };\n  @Input('fxFlex.lt-xl') set flexLtXl(val) { this._cacheInput('flexLtXl', val); };\n  /* tslint:enable */\n\n  // Note: Explicitly @SkipSelf on LayoutDirective and LayoutWrapDirective because we are looking\n  //       for the parent flex container for this flex item.\n  constructor(monitor: MediaMonitor,\n              elRef: ElementRef,\n              renderer: Renderer2,\n              @Optional() @SkipSelf() protected _container: LayoutDirective,\n              @Optional() @SkipSelf() protected _wrap: LayoutWrapDirective) {\n\n    super(monitor, elRef, renderer);\n\n    this._cacheInput('flex', '');\n    this._cacheInput('shrink', 1);\n    this._cacheInput('grow', 1);\n\n    if (_container) {\n      // If this flex item is inside of a flex container marked with\n      // Subscribe to layout immediate parent direction changes\n      this._layoutWatcher = _container.layout$.subscribe((direction) => {\n        // `direction` === null if parent container does not have a `fxLayout`\n        this._onLayoutChange(direction);\n      });\n    }\n  }\n\n  /**\n   * For @Input changes on the current mq activation property, see onMediaQueryChanges()\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['flex'] != null || this._mqActivation) {\n      this._updateStyle();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('flex', '', (changes: MediaChange) => {\n      this._updateStyle(changes.value);\n    });\n    this._updateStyle();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n  }\n\n\n  /**\n   * Caches the parent container's 'flex-direction' and updates the element's style.\n   * Used as a handler for layout change events from the parent flex container.\n   */\n  protected _onLayoutChange(direction?: string) {\n    this._layout = direction || this._layout || 'row';\n    this._updateStyle();\n  }\n\n  protected _updateStyle(value?: string|number) {\n    let flexBasis = value || this._queryInput('flex') || '';\n    if (this._mqActivation) {\n      flexBasis = this._mqActivation.activatedInput;\n    }\n\n    let basis = String(flexBasis).replace(';', '');\n    let parts = validateBasis(basis, this._queryInput('grow'), this._queryInput('shrink'));\n    this._applyStyleToElement(this._validateValue.apply(this, parts));\n  }\n\n  /**\n   * Validate the value to be one of the acceptable value options\n   * Use default fallback of 'row'\n   */\n  protected _validateValue(grow: number|string,\n                           shrink: number|string,\n                           basis: string|number|FlexBasisAlias) {\n      // The flex-direction of this element's flex container. Defaults to 'row'.\n      let layout = this._getFlowDirection(this.parentElement, true);\n      let direction = (layout.indexOf('column') > -1) ? 'column' : 'row';\n      let css, isValue;\n\n      grow = (grow == '0') ? 0 : grow;\n      shrink = (shrink == '0') ? 0 : shrink;\n\n      // flex-basis allows you to specify the initial/starting main-axis size of the element,\n      // before anything else is computed. It can either be a percentage or an absolute value.\n      // It is, however, not the breaking point for flex-grow/shrink properties\n      //\n      // flex-grow can be seen as this:\n      //   0: Do not stretch. Either size to element's content width, or obey 'flex-basis'.\n      //   1: (Default value). Stretch; will be the same size to all other flex items on\n      //       the same row since they have a default value of 1.\n      //   ≥2 (integer n): Stretch. Will be n times the size of other elements\n      //      with 'flex-grow: 1' on the same row.\n\n      // Use `null` to clear existing styles.\n      let clearStyles = {\n        'max-width': null,\n        'max-height': null,\n        'min-width': null,\n        'min-height': null\n      };\n      switch (basis || '') {\n        case '':\n          css = extendObject(clearStyles, {'flex': '1 1 0.000000001px'});\n          break;\n        case 'initial':   // default\n        case 'nogrow':\n          grow = 0;\n          css = extendObject(clearStyles, {'flex': '0 1 auto'});\n          break;\n        case 'grow':\n          css = extendObject(clearStyles, {'flex': '1 1 100%'});\n          break;\n        case 'noshrink':\n          shrink = 0;\n          css = extendObject(clearStyles, {'flex': '1 0 auto'});\n          break;\n        case 'auto':\n          css = extendObject(clearStyles, {'flex': `${grow} ${shrink} auto`});\n          break;\n        case 'none':\n          grow = 0;\n          shrink = 0;\n          css = extendObject(clearStyles, {'flex': '0 0 auto'});\n          break;\n        default:\n          let hasCalc = String(basis).indexOf('calc') > -1;\n          let isPercent = String(basis).indexOf('%') > -1 && !hasCalc;\n\n          isValue = hasCalc ||\n              String(basis).indexOf('px') > -1 ||\n              String(basis).indexOf('em') > -1 ||\n              String(basis).indexOf('vw') > -1 ||\n              String(basis).indexOf('vh') > -1;\n\n          // Defaults to percentage sizing unless `px` is explicitly set\n          if (!isValue && !isPercent && !isNaN(basis as any)) {\n            basis = basis + '%';\n          }\n\n          if (basis === '0px') {\n            basis = '0%';\n          }\n\n          // Set max-width = basis if using layout-wrap\n          // tslint:disable-next-line:max-line-length\n          // @see https://github.com/philipwalton/flexbugs#11-min-and-max-size-declarations-are-ignored-when-wrappifl-flex-items\n\n          css = extendObject(clearStyles, { // fix issue #5345\n            'flex': `${grow} ${shrink} ${(isValue || this._wrap) ? basis : '100%'}`,\n          });\n          break;\n      }\n\n      let max = isFlowHorizontal(direction) ? 'max-width' : 'max-height';\n      let min = isFlowHorizontal(direction) ? 'min-width' : 'min-height';\n\n      let usingCalc = (String(basis).indexOf('calc') > -1) || (basis == 'auto');\n      let isPx = String(basis).indexOf('px') > -1 || usingCalc;\n\n\n      // make box inflexible when shrink and grow are both zero\n      // should not set a min when the grow is zero\n      // should not set a max when the shrink is zero\n      let isFixed = !grow && !shrink;\n      css[min] = (basis == '0%') ? 0 : isFixed || (isPx && grow) ? basis : null;\n      css[max] = (basis == '0%') ? 0 : isFixed || (!usingCalc && shrink) ? basis : null;\n\n    return extendObject(css, {'box-sizing': 'border-box'});\n  }\n\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n /**\n * The flex API permits 3 or 1 parts of the value:\n *    - `flex-grow flex-shrink flex-basis`, or\n *    - `flex-basis`\n */\nexport function validateBasis(basis: string, grow = '1', shrink = '1'): string[] {\n  let parts = [grow, shrink, basis];\n\n  let j = basis.indexOf('calc');\n  if (j > 0) {\n    parts[2] = _validateCalcValue(basis.substring(j).trim());\n    let matches = basis.substr(0, j).trim().split(' ');\n    if (matches.length == 2) {\n      parts[0] = matches[0];\n      parts[1] = matches[1];\n    }\n  } else if (j == 0) {\n    parts[2] = _validateCalcValue(basis.trim());\n  } else {\n    let matches = basis.split(' ');\n    parts = (matches.length === 3) ? matches : [\n          grow, shrink, basis\n        ];\n  }\n\n  return parts;\n}\n\n\n/**\n * Calc expressions require whitespace before & after any expression operators\n * This is a simple, crude whitespace padding solution.\n *   - '3 3 calc(15em + 20px)'\n *   - calc(100% / 7 * 2)\n *   - 'calc(15em + 20px)'\n *   - 'calc(15em+20px)'\n *   - '37px'\n *   = '43%'\n */\nfunction _validateCalcValue(calc: string): string {\n  return calc.replace(/[\\s]/g, '').replace(/[\\/\\*\\+\\-]/g, ' $& ');\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  SimpleChanges, Self, Optional,\n} from '@angular/core';\nimport {Subscription} from 'rxjs/Subscription';\n\nimport {BaseFxDirective} from './base';\nimport {LayoutDirective} from './layout';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {validateWrapValue, LAYOUT_VALUES} from '../../utils/layout-validator';\n/**\n * @deprecated\n * This functionality is now part of the `fxLayout` API\n *\n * 'layout-wrap' flexbox styling directive\n * Defines wrapping of child elements in layout container\n * Optional values: reverse, wrap-reverse, none, nowrap, wrap (default)]\n *\n *\n * @see https://css-tricks.com/almanac/properties/f/flex-wrap/\n */\n@Directive({selector: `\n  [fxLayoutWrap], [fxLayoutWrap.xs], [fxLayoutWrap.sm], [fxLayoutWrap.lg], [fxLayoutWrap.xl],\n  [fxLayoutWrap.gt-xs], [fxLayoutWrap.gt-sm], [fxLayoutWrap.gt-md], [fxLayoutWrap.gt-lg],\n  [fxLayoutWrap.lt-xs], [fxLayoutWrap.lt-sm], [fxLayoutWrap.lt-md], [fxLayoutWrap.lt-lg]\n`})\nexport class LayoutWrapDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n  protected _layout = 'row';  // default flex-direction\n  protected _layoutWatcher: Subscription;\n\n  /* tslint:disable */\n  @Input('fxLayoutWrap')       set wrap(val)     { this._cacheInput('wrap', val); }\n  @Input('fxLayoutWrap.xs')    set wrapXs(val)   { this._cacheInput('wrapXs', val); }\n  @Input('fxLayoutWrap.sm')    set wrapSm(val)   { this._cacheInput('wrapSm', val); };\n  @Input('fxLayoutWrap.md')    set wrapMd(val)   { this._cacheInput('wrapMd', val); };\n  @Input('fxLayoutWrap.lg')    set wrapLg(val)   { this._cacheInput('wrapLg', val); };\n  @Input('fxLayoutWrap.xl')    set wrapXl(val)   { this._cacheInput('wrapXl', val); };\n\n  @Input('fxLayoutWrap.gt-xs') set wrapGtXs(val) { this._cacheInput('wrapGtXs', val); };\n  @Input('fxLayoutWrap.gt-sm') set wrapGtSm(val) { this._cacheInput('wrapGtSm', val); };\n  @Input('fxLayoutWrap.gt-md') set wrapGtMd(val) { this._cacheInput('wrapGtMd', val); };\n  @Input('fxLayoutWrap.gt-lg') set wrapGtLg(val) { this._cacheInput('wrapGtLg', val); };\n\n  @Input('fxLayoutWrap.lt-sm') set wrapLtSm(val) { this._cacheInput('wrapLtSm', val); };\n  @Input('fxLayoutWrap.lt-md') set wrapLtMd(val) { this._cacheInput('wrapLtMd', val); };\n  @Input('fxLayoutWrap.lt-lg') set wrapLtLg(val) { this._cacheInput('wrapLtLg', val); };\n  @Input('fxLayoutWrap.lt-xl') set wrapLtXl(val) { this._cacheInput('wrapLtXl', val); };\n\n  /* tslint:enable */\n  constructor(\n    monitor: MediaMonitor,\n    elRef: ElementRef,\n    renderer: Renderer2,\n    @Optional() @Self() container: LayoutDirective) {\n\n    super(monitor, elRef, renderer);\n\n    if (container) {  // Subscribe to layout direction changes\n      this._layoutWatcher = container.layout$.subscribe(this._onLayoutChange.bind(this));\n    }\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['wrap'] != null || this._mqActivation) {\n      this._updateWithValue();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('wrap', 'wrap', (changes: MediaChange) => {\n      this._updateWithValue(changes.value);\n    });\n    this._updateWithValue();\n  }\n\n  ngOnDestroy() {\n      super.ngOnDestroy();\n    if (this._layoutWatcher) {\n      this._layoutWatcher.unsubscribe();\n    }\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Cache the parent container 'flex-direction' and update the 'flex' styles\n   */\n  protected _onLayoutChange(direction) {\n    this._layout = (direction || '').toLowerCase().replace('-reverse', '');\n    if (!LAYOUT_VALUES.find(x => x === this._layout)) {\n      this._layout = 'row';\n    }\n\n    this._updateWithValue();\n  }\n\n  protected _updateWithValue(value?: string) {\n    value = value || this._queryInput('wrap');\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n    value = validateWrapValue(value || 'wrap');\n\n    this._applyStyleToElement(this._buildCSS(value));\n  }\n\n  /**\n   * Build the CSS that should be assigned to the element instance\n   */\n  protected _buildCSS(value) {\n    return {\n      'display': 'flex',\n      'flex-wrap': value,\n      'flex-direction': this.flowDirection\n    };\n  }\n\n  protected get flowDirection(): string {\n    let computeFlowDirection = () => this._getFlowDirection(this._elementRef.nativeElement);\n    return this._layoutWatcher ? this._layout : computeFlowDirection();\n  }\n\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Directive,\n  ElementRef,\n  Input,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  Renderer2,\n  SimpleChanges,\n} from '@angular/core';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Observable} from 'rxjs/Observable';\n\nimport {BaseFxDirective} from './base';\nimport {MediaChange} from '../../media-query/media-change';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {buildLayoutCSS} from '../../utils/layout-validator';\n/**\n * 'layout' flexbox styling directive\n * Defines the positioning flow direction for the child elements: row or column\n * Optional values: column or row (default)\n * @see https://css-tricks.com/almanac/properties/f/flex-direction/\n *\n */\n@Directive({selector: `\n  [fxLayout],\n  [fxLayout.xs], [fxLayout.sm], [fxLayout.md], [fxLayout.lg], [fxLayout.xl],\n  [fxLayout.lt-sm], [fxLayout.lt-md], [fxLayout.lt-lg], [fxLayout.lt-xl],\n  [fxLayout.gt-xs], [fxLayout.gt-sm], [fxLayout.gt-md], [fxLayout.gt-lg]\n`})\nexport class LayoutDirective extends BaseFxDirective implements OnInit, OnChanges, OnDestroy {\n\n  /**\n   * Create Observable for nested/child 'flex' directives. This allows\n   * child flex directives to subscribe/listen for flexbox direction changes.\n   */\n  protected _announcer: BehaviorSubject<string>;\n\n  /**\n   * Publish observer to enabled nested, dependent directives to listen\n   * to parent 'layout' direction changes\n   */\n  public layout$: Observable<string>;\n\n  /* tslint:disable */\n  @Input('fxLayout')       set layout(val)     { this._cacheInput('layout', val); };\n  @Input('fxLayout.xs')    set layoutXs(val)   { this._cacheInput('layoutXs', val); };\n  @Input('fxLayout.sm')    set layoutSm(val)   { this._cacheInput('layoutSm', val); };\n  @Input('fxLayout.md')    set layoutMd(val)   { this._cacheInput('layoutMd', val); };\n  @Input('fxLayout.lg')    set layoutLg(val)   { this._cacheInput('layoutLg', val); };\n  @Input('fxLayout.xl')    set layoutXl(val)   { this._cacheInput('layoutXl', val); };\n\n  @Input('fxLayout.gt-xs') set layoutGtXs(val) { this._cacheInput('layoutGtXs', val); };\n  @Input('fxLayout.gt-sm') set layoutGtSm(val) { this._cacheInput('layoutGtSm', val); };\n  @Input('fxLayout.gt-md') set layoutGtMd(val) { this._cacheInput('layoutGtMd', val); };\n  @Input('fxLayout.gt-lg') set layoutGtLg(val) { this._cacheInput('layoutGtLg', val); };\n\n  @Input('fxLayout.lt-sm') set layoutLtSm(val) { this._cacheInput('layoutLtSm', val); };\n  @Input('fxLayout.lt-md') set layoutLtMd(val) { this._cacheInput('layoutLtMd', val); };\n  @Input('fxLayout.lt-lg') set layoutLtLg(val) { this._cacheInput('layoutLtLg', val); };\n  @Input('fxLayout.lt-xl') set layoutLtXl(val) { this._cacheInput('layoutLtXl', val); };\n\n  /* tslint:enable */\n  /**\n   *\n   */\n  constructor(monitor: MediaMonitor, elRef: ElementRef, renderer: Renderer2) {\n    super(monitor, elRef, renderer);\n    this._announcer = new BehaviorSubject<string>('row');\n    this.layout$ = this._announcer.asObservable();\n  }\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * On changes to any @Input properties...\n   * Default to use the non-responsive Input value ('fxLayout')\n   * Then conditionally override with the mq-activated Input's current value\n   */\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['layout'] != null || this._mqActivation) {\n      this._updateWithDirection();\n    }\n  }\n\n  /**\n   * After the initial onChanges, build an mqActivation object that bridges\n   * mql change events to onMediaQueryChange handlers\n   */\n  ngOnInit() {\n    super.ngOnInit();\n\n    this._listenForMediaQueryChanges('layout', 'row', (changes: MediaChange) => {\n      this._updateWithDirection(changes.value);\n    });\n    this._updateWithDirection();\n  }\n\n  // *********************************************\n  // Protected methods\n  // *********************************************\n\n  /**\n   * Validate the direction value and then update the host's inline flexbox styles\n   */\n  protected _updateWithDirection(value?: string) {\n    value = value || this._queryInput('layout') || 'row';\n    if (this._mqActivation) {\n      value = this._mqActivation.activatedInput;\n    }\n\n    // Update styles and announce to subscribers the *new* direction\n    let css = buildLayoutCSS(value);\n\n    this._applyStyleToElement(css);\n    this._announcer.next(css['flex-direction']);\n  }\n\n\n\n\n\n\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  ElementRef, OnDestroy, SimpleChanges, OnChanges,\n  SimpleChange, Renderer2\n} from '@angular/core';\n\nimport {buildLayoutCSS} from '../../utils/layout-validator';\nimport {\n  StyleDefinition,\n  lookupStyle,\n  lookupInlineStyle,\n  applyStyleToElement,\n  applyStyleToElements\n} from '../../utils/style-utils';\n\nimport {ResponsiveActivation, KeyOptions} from '../responsive/responsive-activation';\nimport {MediaMonitor} from '../../media-query/media-monitor';\nimport {MediaQuerySubscriber} from '../../media-query/media-change';\n\n/** Abstract base class for the Layout API styling directives. */\nexport abstract class BaseFxDirective implements OnDestroy, OnChanges {\n\n  get hasMediaQueryListener() {\n    return !!this._mqActivation;\n  }\n\n  /**\n   * Imperatively determine the current activated [input] value;\n   * if called before ngOnInit() this will return `undefined`\n   */\n  get activatedValue(): string | number {\n    return this._mqActivation ? this._mqActivation.activatedInput : undefined;\n  }\n\n  /**\n   * Change the currently activated input value and force-update\n   * the injected CSS (by-passing change detection).\n   *\n   * NOTE: Only the currently activated input value will be modified;\n   *       other input values will NOT be affected.\n   */\n  set activatedValue(value: string | number) {\n    let key = 'baseKey', previousVal;\n\n    if (this._mqActivation) {\n      key = this._mqActivation.activatedInputKey;\n      previousVal = this._inputMap[key];\n      this._inputMap[key] = value;\n    }\n    let change = new SimpleChange(previousVal, value, false);\n\n    this.ngOnChanges({[key]: change} as SimpleChanges);\n  }\n\n\n  /**\n   * Constructor\n   */\n  constructor(protected _mediaMonitor: MediaMonitor,\n              protected _elementRef: ElementRef,\n              protected _renderer: Renderer2) {\n  }\n\n  // *********************************************\n  // Accessor Methods\n  // *********************************************\n\n  /**\n   * Access to host element's parent DOM node\n   */\n  protected get parentElement(): any {\n    return this._elementRef.nativeElement.parentNode;\n  }\n\n  /**\n   * Access the current value (if any) of the @Input property.\n   */\n  protected _queryInput(key) {\n    return this._inputMap[key];\n  }\n\n\n  // *********************************************\n  // Lifecycle Methods\n  // *********************************************\n\n  /**\n   * Use post-component-initialization event to perform extra\n   * querying such as computed Display style\n   */\n  ngOnInit() {\n    this._display = this._getDisplayStyle();\n    this._hasInitialized = true;\n  }\n\n  ngOnChanges(change: SimpleChanges) {\n    throw new Error(`BaseFxDirective::ngOnChanges should be overridden in subclass: ${change}`);\n  }\n\n  ngOnDestroy() {\n    if (this._mqActivation) {\n      this._mqActivation.destroy();\n    }\n    this._mediaMonitor = null;\n  }\n\n  // *********************************************\n  // Protected Methods\n  // *********************************************\n\n  /**\n   * Was the directive's default selector used ?\n   * If not, use the fallback value!\n   */\n  protected _getDefaultVal(key: string, fallbackVal: any): string | boolean {\n    let val = this._queryInput(key);\n    let hasDefaultVal = (val !== undefined && val !== null);\n    return (hasDefaultVal && val !== '') ? val : fallbackVal;\n  }\n\n  /**\n   * Quick accessor to the current HTMLElement's `display` style\n   * Note: this allows use to preserve the original style\n   * and optional restore it when the mediaQueries deactivate\n   */\n  protected _getDisplayStyle(source?: HTMLElement): string {\n    let element: HTMLElement = source || this._elementRef.nativeElement;\n    return lookupStyle(element, 'display');\n  }\n\n  /**\n   * Determine the DOM element's Flexbox flow (flex-direction).\n   *\n   * Check inline style first then check computed (stylesheet) style.\n   * And optionally add the flow value to element's inline style.\n   */\n  protected _getFlowDirection(target: any, addIfMissing = false): string {\n    let value = 'row';\n\n    if (target) {\n      value = lookupStyle(target, 'flex-direction') || 'row';\n      let hasInlineValue = lookupInlineStyle(target, 'flex-direction');\n\n      if (!hasInlineValue && addIfMissing) {\n        applyStyleToElements(this._renderer, buildLayoutCSS(value), [target]);\n      }\n    }\n\n    return value.trim();\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive element.\n   */\n  protected _applyStyleToElement(style: StyleDefinition,\n                                 value?: string | number,\n                                 nativeElement?: any) {\n    let element = nativeElement || this._elementRef.nativeElement;\n    applyStyleToElement(this._renderer, element, style, value);\n  }\n\n  /**\n   * Applies styles given via string pair or object map to the directive's element.\n   */\n  protected _applyStyleToElements(style: StyleDefinition, elements: HTMLElement[ ]) {\n    applyStyleToElements(this._renderer, style, elements || []);\n  }\n\n  /**\n   *  Save the property value; which may be a complex object.\n   *  Complex objects support property chains\n   */\n  protected _cacheInput(key?: string, source?: any) {\n    if (typeof source === 'object') {\n      for (let prop in source) {\n        this._inputMap[prop] = source[prop];\n      }\n    } else {\n      this._inputMap[key] = source;\n    }\n  }\n\n  /**\n   *  Build a ResponsiveActivation object used to manage subscriptions to mediaChange notifications\n   *  and intelligent lookup of the directive's property value that corresponds to that mediaQuery\n   *  (or closest match).\n   */\n  protected _listenForMediaQueryChanges(key: string,\n                                        defaultValue: any,\n                                        onMediaQueryChange: MediaQuerySubscriber): ResponsiveActivation { // tslint:disable-line:max-line-length\n    if (!this._mqActivation) {\n      let keyOptions = new KeyOptions(key, defaultValue, this._inputMap);\n      this._mqActivation = new ResponsiveActivation(\n          keyOptions,\n          this._mediaMonitor,\n          (change) => onMediaQueryChange(change)\n      );\n    }\n    return this._mqActivation;\n  }\n\n  /**\n   * Special accessor to query for all child 'element' nodes regardless of type, class, etc.\n   */\n  protected get childrenNodes() {\n    const obj = this._elementRef.nativeElement.children;\n    const buffer = [];\n\n    // iterate backwards ensuring that length is an UInt32\n    for (let i = obj.length; i--; ) {\n      buffer[i] = obj[i];\n    }\n    return buffer;\n  }\n\n  /**\n   * Fast validator for presence of attribute on the host element\n   */\n  protected hasKeyValue(key) {\n    return this._mqActivation.hasKeyValue(key);\n  }\n\n  protected get hasInitialized() {\n    return this._hasInitialized;\n  }\n\n  /** Original dom Elements CSS display style */\n  protected _display;\n\n  /**\n   * MediaQuery Activation Tracker\n   */\n  protected _mqActivation: ResponsiveActivation;\n\n  /**\n   *  Dictionary of input keys with associated values\n   */\n  protected _inputMap = {};\n\n  /**\n   * Has the `ngOnInit()` method fired\n   *\n   * Used to allow *ngFor tasks to finish and support queries like\n   * getComputedStyle() during ngOnInit().\n   */\n  protected _hasInitialized = false;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Subscription} from 'rxjs/Subscription';\nimport {map} from 'rxjs/operator/map';\n\nimport {MediaChange, MediaQuerySubscriber} from '../../media-query/media-change';\nimport {BreakPoint} from '../../media-query/breakpoints/break-point';\nimport {MediaMonitor} from '../../media-query/media-monitor';\n\nimport {extendObject} from '../../utils/object-extend';\n\nexport declare type SubscriptionList = Subscription[ ];\n\nexport interface BreakPointX extends BreakPoint {\n  key: string;\n  baseKey: string;\n}\n\nexport class KeyOptions {\n  constructor(public baseKey: string,\n              public defaultValue: string|number|boolean,\n              public inputKeys: { [key: string]: any }) {\n  }\n}\n\n/**\n * ResponsiveActivation acts as a proxy between the MonitorMedia service (which emits mediaQuery\n * changes) and the fx API directives. The MQA proxies mediaQuery change events and notifies the\n * directive via the specified callback.\n *\n * - The MQA also determines which directive property should be used to determine the\n *   current change 'value'... BEFORE the original `onMediaQueryChanges()` method is called.\n * - The `ngOnDestroy()` method is also head-hooked to enable auto-unsubscribe from the\n *   MediaQueryServices.\n *\n * NOTE: these interceptions enables the logic in the fx API directives to remain terse and clean.\n */\nexport class ResponsiveActivation {\n  private _subscribers: SubscriptionList = [];\n  private _activatedInputKey: string;\n\n  /**\n   * Constructor\n   */\n  constructor(private _options: KeyOptions,\n              private _mediaMonitor: MediaMonitor,\n              private _onMediaChanges: MediaQuerySubscriber) {\n    this._subscribers = this._configureChangeObservers();\n  }\n\n  /**\n   * Accessor to the DI'ed directive property\n   * Each directive instance has a reference to the MediaMonitor which is\n   * used HERE to subscribe to mediaQuery change notifications.\n   */\n  get mediaMonitor(): MediaMonitor {\n    return this._mediaMonitor;\n  }\n\n  /**\n   * Determine which directive @Input() property is currently active (for the viewport size):\n   * The key must be defined (in use) or fallback to the 'closest' overlapping property key\n   * that is defined; otherwise the default property key will be used.\n   * e.g.\n   *      if `<div fxHide fxHide.gt-sm=\"false\">` is used but the current activated mediaQuery alias\n   *      key is `.md` then `.gt-sm` should be used instead\n   */\n  get activatedInputKey(): string {\n    return this._activatedInputKey || this._options.baseKey;\n  }\n\n  /**\n   * Get the currently activated @Input value or the fallback default @Input value\n   */\n  get activatedInput(): any {\n    let key = this.activatedInputKey;\n    return this.hasKeyValue(key) ? this._lookupKeyValue(key) : this._options.defaultValue;\n  }\n\n  /**\n   * Fast validator for presence of attribute on the host element\n   */\n  public hasKeyValue(key) {\n    let value = this._options.inputKeys[key];\n    return typeof value !== 'undefined';\n  }\n\n  /**\n   * Remove interceptors, restore original functions, and forward the onDestroy() call\n   */\n  destroy() {\n    this._subscribers.forEach((link: Subscription) => {\n      link.unsubscribe();\n    });\n    this._subscribers = [];\n  }\n\n  /**\n   * For each *defined* API property, register a callback to `_onMonitorEvents( )`\n   * Cache 1..n subscriptions for internal auto-unsubscribes when the the directive destructs\n   */\n  private _configureChangeObservers(): SubscriptionList {\n    let subscriptions = [];\n\n    this._buildRegistryMap().forEach((bp: BreakPointX) => {\n      if (this._keyInUse(bp.key)) {\n        // Inject directive default property key name: to let onMediaChange() calls\n        // know which property is being triggered...\n        let buildChanges = (change: MediaChange) => {\n          change = change.clone();\n          change.property = this._options.baseKey;\n          return change;\n        };\n\n        subscriptions.push(\n            map.call(this.mediaMonitor.observe(bp.alias), buildChanges)\n                .subscribe(change => {\n                  this._onMonitorEvents(change);\n                })\n        );\n      }\n    });\n\n    return subscriptions;\n  }\n\n  /**\n   * Build mediaQuery key-hashmap; only for the directive properties that are actually defined/used\n   * in the HTML markup\n   */\n  private _buildRegistryMap() {\n    return this.mediaMonitor.breakpoints\n        .map(bp => {\n          return <BreakPointX> extendObject({}, bp, {\n            baseKey: this._options.baseKey,             // e.g. layout, hide, self-align, flex-wrap\n            key: this._options.baseKey + bp.suffix  // e.g.  layoutGtSm, layoutMd, layoutGtLg\n          });\n        })\n        .filter(bp => this._keyInUse(bp.key));\n  }\n\n  /**\n   * Synchronizes change notifications with the current mq-activated @Input and calculates the\n   * mq-activated input value or the default value\n   */\n  protected _onMonitorEvents(change: MediaChange) {\n    if (change.property == this._options.baseKey) {\n      change.value = this._calculateActivatedValue(change);\n\n      this._onMediaChanges(change);\n    }\n  }\n\n  /**\n   * Has the key been specified in the HTML markup and thus is intended\n   * to participate in activation processes.\n   */\n  private _keyInUse(key): boolean {\n    return this._lookupKeyValue(key) !== undefined;\n  }\n\n  /**\n   *  Map input key associated with mediaQuery activation to closest defined input key\n   *  then return the values associated with the targeted input property\n   *\n   *  !! change events may arrive out-of-order (activate before deactivate)\n   *     so make sure the deactivate is used ONLY when the keys match\n   *     (since a different activate may be in use)\n   */\n  private _calculateActivatedValue(current: MediaChange): any {\n    const currentKey = this._options.baseKey + current.suffix;  // e.g. suffix == 'GtSm',\n    let newKey = this._activatedInputKey;                     // e.g. newKey == hideGtSm\n\n    newKey = current.matches ? currentKey : ((newKey == currentKey) ? null : newKey);\n\n    this._activatedInputKey = this._validateInputKey(newKey);\n    return this.activatedInput;\n  }\n\n  /**\n   * For the specified input property key, validate it is defined (used in the markup)\n   * If not see if a overlapping mediaQuery-related input key fallback has been defined\n   *\n   * NOTE: scans in the order defined by activeOverLaps (largest viewport ranges -> smallest ranges)\n   */\n  private _validateInputKey(inputKey) {\n    let items: BreakPoint[] = this.mediaMonitor.activeOverlaps;\n    let isMissingKey = (key) => !this._keyInUse(key);\n\n    if (isMissingKey(inputKey)) {\n      items.some(bp => {\n        let key = this._options.baseKey + bp.suffix;\n        if (!isMissingKey(key)) {\n          inputKey = key;\n          return true;  // exit .some()\n        }\n        return false;\n      });\n    }\n    return inputKey;\n  }\n\n  /**\n   * Get the value (if any) for the directive instances @Input property (aka key)\n   */\n  private _lookupKeyValue(key) {\n    return this._options.inputKeys[key];\n  }\n\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Renderer2} from '@angular/core';\nimport {ɵgetDOM as getDom} from '@angular/platform-browser';\nimport {applyCssPrefixes} from './auto-prefixer';\n\n/**\n * Definition of a css style. Either a property name (e.g. \"flex-basis\") or an object\n * map of property name and value (e.g. {display: 'none', flex-order: 5}).\n */\nexport type StyleDefinition = string | { [property: string]: string | number };\n\n\n/**\n * Applies styles given via string pair or object map to the directive element.\n */\nexport function applyStyleToElement(renderer: Renderer2,\n                                    element: any,\n                                    style: StyleDefinition,\n                                    value?: string | number) {\n  let styles = {};\n  if (typeof style === 'string') {\n    styles[style] = value;\n    style = styles;\n  }\n\n  styles = applyCssPrefixes(style);\n  applyMultiValueStyleToElement(styles, element, renderer);\n}\n\n\n/**\n * Applies styles given via string pair or object map to the directive's element.\n */\nexport function applyStyleToElements(renderer: Renderer2,\n                              style: StyleDefinition,\n                              elements: HTMLElement[ ]) {\n  let styles = applyCssPrefixes(style);\n\n  elements.forEach(el => {\n    applyMultiValueStyleToElement(styles, el, renderer);\n  });\n}\n\n/**\n * Applies the styles to the element. The styles object map may contain an array of values.\n * Each value will be added as element style.\n */\nexport function applyMultiValueStyleToElement(styles: {}, element: any, renderer: Renderer2) {\n  Object.keys(styles).forEach(key => {\n    const values = Array.isArray(styles[key]) ? styles[key] : [styles[key]];\n    for (let value of values) {\n      renderer.setStyle(element, key, value);\n    }\n  });\n}\n\n/**\n * Find the DOM element's inline style value (if any)\n */\nexport function lookupInlineStyle(element: HTMLElement, styleName: string): string {\n  return getDom().getStyle(element, styleName);\n}\n\n/**\n * Determine the inline or inherited CSS style\n */\nexport function lookupStyle(element: HTMLElement, styleName: string, inlineOnly = false): string {\n  let value = '';\n  if (element) {\n    try {\n      let immediateValue = value = lookupInlineStyle(element, styleName);\n      if ( !inlineOnly ) {\n        value = immediateValue || getDom().getComputedStyle(element).getPropertyValue(styleName);\n      }\n    } catch (e) {\n      // TODO: platform-server throws an exception for getComputedStyle\n    }\n  }\n\n  // Note: 'inline' is the default of all elements, unless UA stylesheet overrides;\n  //       in which case getComputedStyle() should determine a valid value.\n  return value ? value.trim() : 'block';\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Applies CSS prefixes to appropriate style keys.\n *\n * Note: `-ms-`, `-moz` and `-webkit-box` are no longer supported. e.g.\n *    {\n *      display: -webkit-flex;     NEW - Safari 6.1+. iOS 7.1+, BB10\n *      display: flex;             NEW, Spec - Firefox, Chrome, Opera\n *      // display: -webkit-box;   OLD - iOS 6-, Safari 3.1-6, BB7\n *      // display: -ms-flexbox;   TWEENER - IE 10\n *      // display: -moz-flexbox;  OLD - Firefox\n *    }\n */\nexport function applyCssPrefixes(target) {\n  for (let key in target) {\n    let value = target[key] || '';\n\n    switch (key) {\n      case 'display':\n        if (value === 'flex') {\n          target['display'] = [\n            '-webkit-flex',\n            'flex'\n          ];\n        } else if (value === 'inline-flex') {\n          target['display'] = [\n            '-webkit-inline-flex',\n            'inline-flex'\n          ];\n        } else {\n          target['display'] = value;\n        }\n        break;\n\n      case 'align-items':\n      case 'align-self':\n      case 'align-content':\n      case 'flex':\n      case 'flex-basis':\n      case 'flex-flow':\n      case 'flex-grow':\n      case 'flex-shrink':\n      case 'flex-wrap':\n      case 'justify-content':\n        target['-webkit-' + key] = value;\n        break;\n\n      case 'flex-direction':\n        value = value || 'row';\n        target['-webkit-flex-direction'] = value;\n        target['flex-direction'] = value;\n        break;\n\n      case 'order':\n        target['order'] = target['-webkit-' + key] = isNaN(value) ? '0' : value;\n        break;\n    }\n  }\n  return target;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport const LAYOUT_VALUES = ['row', 'column', 'row-reverse', 'column-reverse'];\n\n/**\n * Validate the direction|'direction wrap' value and then update the host's inline flexbox styles\n */\nexport function buildLayoutCSS(value: string) {\n  let [direction, wrap] = validateValue(value);\n  return  buildCSS(direction, wrap);\n }\n\n/**\n  * Validate the value to be one of the acceptable value options\n  * Use default fallback of 'row'\n  */\nexport function validateValue(value: string) {\n  value = value ? value.toLowerCase() : '';\n  let [direction, wrap] = value.split(' ');\n  if (!LAYOUT_VALUES.find(x => x === direction)) {\n    direction = LAYOUT_VALUES[0];\n  }\n  return [direction, validateWrapValue(wrap)];\n}\n\n/**\n * Determine if the validated, flex-direction value specifies\n * a horizontal/row flow.\n */\nexport function isFlowHorizontal(value: string): boolean {\n  let [flow, _] = validateValue(value);\n  return flow.indexOf('row') > -1;\n}\n\n/**\n * Convert layout-wrap='<value>' to expected flex-wrap style\n */\nexport function validateWrapValue(value) {\n  if (!!value) {\n    switch (value.toLowerCase()) {\n      case 'reverse':\n      case 'wrap-reverse':\n      case 'reverse-wrap':\n        value = 'wrap-reverse';\n        break;\n\n      case 'no':\n      case 'none':\n      case 'nowrap':\n        value = 'nowrap';\n        break;\n\n      // All other values fallback to 'wrap'\n      default:\n        value = 'wrap';\n        break;\n    }\n  }\n  return value;\n}\n\n\n\n/**\n * Build the CSS that should be assigned to the element instance\n * BUG:\n *   1) min-height on a column flex container won’t apply to its flex item children in IE 10-11.\n *      Use height instead if possible; height : <xxx>vh;\n *\n *  This way any padding or border specified on the child elements are\n *  laid out and drawn inside that element's specified width and height.\n */\nfunction buildCSS(direction, wrap = null) {\n  return {\n    'display': 'flex',\n    'box-sizing': 'border-box',\n    'flex-direction': direction,\n    'flex-wrap': !!wrap ? wrap : null\n  };\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Optional, SkipSelf} from '@angular/core';\n\nimport {MediaMonitor} from './media-monitor';\nimport {MatchMedia} from './match-media';\nimport {BreakPointRegistry} from './breakpoints/break-point-registry';\n\n/**\n * Ensure a single global service provider\n */\nexport function MEDIA_MONITOR_PROVIDER_FACTORY(parentMonitor: MediaMonitor,\n                                               breakpoints: BreakPointRegistry,\n                                               matchMedia: MatchMedia) {\n  return parentMonitor || new MediaMonitor(breakpoints, matchMedia);\n}\n\n\n/**\n * Export provider that uses a global service factory (above)\n */\nexport const MEDIA_MONITOR_PROVIDER = {\n  provide : MediaMonitor,\n  deps : [\n    [ new Optional(), new SkipSelf(), MediaMonitor ],\n    BreakPointRegistry,\n    MatchMedia,\n  ],\n  useFactory : MEDIA_MONITOR_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {NgModule} from '@angular/core';\n\nimport {MatchMedia} from './match-media';\nimport {MediaMonitor} from './media-monitor';\nimport {OBSERVABLE_MEDIA_PROVIDER} from './observable-media-provider';\nimport {DEFAULT_BREAKPOINTS_PROVIDER} from './breakpoints/break-points-provider';\nimport {BreakPointRegistry} from './breakpoints/break-point-registry';\n\n/**\n * *****************************************************************\n * Define module for the MediaQuery API\n * *****************************************************************\n */\n\n@NgModule({\n  providers: [\n    DEFAULT_BREAKPOINTS_PROVIDER,  // Supports developer overrides of list of known breakpoints\n    BreakPointRegistry,      // Registry of known/used BreakPoint(s)\n    MatchMedia,              // Low-level service to publish observables w/ window.matchMedia()\n    MediaMonitor,            // MediaQuery monitor service observes all known breakpoints\n    OBSERVABLE_MEDIA_PROVIDER  // easy subscription injectable `media$` matchMedia observable\n  ]\n})\nexport class MediaQueriesModule {\n}\n\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  InjectionToken,    // tslint:disable-line:no-unused-variable\n} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\nimport {DEFAULT_BREAKPOINTS} from './data/break-points';\nimport {ORIENTATION_BREAKPOINTS} from './data/orientation-break-points';\n\nimport {extendObject} from '../../utils/object-extend';\nimport {mergeByAlias, validateSuffixes} from '../../utils/breakpoint-tools';\n\n\n/**\n * Options to identify which breakpoint types to include as part of\n * a BreakPoint provider\n */\nexport interface BreakPointProviderOptions {\n  /**\n   * include pre-configured, internal default breakpoints.\n   * @default 'true'\n   */\n  defaults ?: boolean;\n  /**\n   * include pre-configured, internal orientations breakpoints.\n   * @default 'false'\n   */\n  orientations ?: boolean;\n}\n\n/**\n * Add new custom items to the default list or override existing default with custom overrides\n */\nexport function buildMergedBreakPoints(_custom?: BreakPoint[],\n                                       options?: BreakPointProviderOptions) {\n  options = extendObject({ }, {\n        defaults: true,       // exclude pre-configured, internal default breakpoints\n        orientation: false      // exclude pre-configured, internal orientations breakpoints\n  }, options || { });\n\n  return () => {\n    // Order so the defaults are loaded last; so ObservableMedia will report these last!\n    let defaults = options.orientations ? ORIENTATION_BREAKPOINTS.concat(DEFAULT_BREAKPOINTS) :\n        DEFAULT_BREAKPOINTS;\n\n    return options.defaults ? mergeByAlias(defaults, _custom || []) : mergeByAlias(_custom);\n  };\n}\n\n/**\n *  Ensure that only a single global BreakPoint list is instantiated...\n */\nexport function DEFAULT_BREAKPOINTS_PROVIDER_FACTORY() {\n  return validateSuffixes(DEFAULT_BREAKPOINTS);\n}\n/**\n * Default Provider that does not support external customization nor provide\n * the extra extended breakpoints:   \"handset\", \"tablet\", and \"web\"\n *\n *  NOTE: !! breakpoints are considered to have unique 'alias' properties,\n *        custom breakpoints matching existing breakpoints will override the properties\n *        of the existing (and not be added as an extra breakpoint entry).\n *        [xs, gt-xs, sm, gt-sm, md, gt-md, lg, gt-lg, xl]\n */\nexport const DEFAULT_BREAKPOINTS_PROVIDER = { // tslint:disable-line:variable-name\n  provide: BREAKPOINTS,\n  useFactory: DEFAULT_BREAKPOINTS_PROVIDER_FACTORY\n};\n/**\n * Use with FlexLayoutModule.CUSTOM_BREAKPOINTS_PROVIDER_FACTORY!\n */\nexport function CUSTOM_BREAKPOINTS_PROVIDER_FACTORY(_custom?: BreakPoint[],\n                                                    options?: BreakPointProviderOptions) {\n  return {\n    provide: BREAKPOINTS,\n    useFactory: buildMergedBreakPoints(_custom, options)\n  };\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n import {BreakPoint} from '../media-query/breakpoints/break-point';\nimport {extendObject} from './object-extend';\n\nconst ALIAS_DELIMITERS = /(\\.|-|_)/g;\nfunction firstUpperCase(part: string) {\n  let first = part.length > 0 ? part.charAt(0) : '';\n  let remainder = (part.length > 1) ? part.slice(1) : '';\n  return first.toUpperCase() + remainder;\n}\n\n/**\n * Converts snake-case to SnakeCase.\n * @param name Text to UpperCamelCase\n */\nfunction camelCase(name: string): string {\n  return name\n      .replace(ALIAS_DELIMITERS, '|')\n      .split('|')\n      .map(firstUpperCase)\n      .join('');\n}\n\n/**\n * For each breakpoint, ensure that a Suffix is defined;\n * fallback to UpperCamelCase the unique Alias value\n */\nexport function validateSuffixes(list: BreakPoint[]): BreakPoint[] {\n  list.forEach((bp: BreakPoint) => {\n    if (!bp.suffix || bp.suffix === '') {\n      bp.suffix = camelCase(bp.alias);          // create Suffix value based on alias\n      bp.overlapping = bp.overlapping || false; // ensure default value\n    }\n  });\n  return list;\n}\n\n/**\n * Merge a custom breakpoint list with the default list based on unique alias values\n *  - Items are added if the alias is not in the default list\n *  - Items are merged with the custom override if the alias exists in the default list\n */\nexport function mergeByAlias(defaults: BreakPoint[], custom: BreakPoint[] = []): BreakPoint[] {\n  const merged = defaults.map((bp) => extendObject({}, bp));\n  const findByAlias = (alias) => merged.reduce((result, bp) => {\n    return result || (( bp.alias === alias) ? bp : null);\n  }, null);\n\n  // Merge custom breakpoints\n  custom.forEach((bp: BreakPoint) => {\n    let target = findByAlias(bp.alias);\n    if (target) {\n      extendObject(target, bp);\n    } else {\n      merged.push(bp);\n    }\n  });\n\n  return validateSuffixes(merged);\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BreakPoint} from '../break-point';\n\n/* tslint:disable */\nconst HANDSET_PORTRAIT  = '(orientations: portrait) and (max-width: 599px)';\nconst HANDSET_LANDSCAPE = '(orientations: landscape) and (max-width: 959px)';\n\nconst TABLET_LANDSCAPE  = '(orientations: landscape) and (min-width: 960px) and (max-width: 1279px)';\nconst TABLET_PORTRAIT   = '(orientations: portrait) and (min-width: 600px) and (max-width: 839px)';\n\nconst WEB_PORTRAIT      = '(orientations: portrait) and (min-width: 840px)';\nconst WEB_LANDSCAPE     = '(orientations: landscape) and (min-width: 1280px)';\n\nexport const ScreenTypes = {\n  'HANDSET'           : `${HANDSET_PORTRAIT}, ${HANDSET_LANDSCAPE}`,\n  'TABLET'            : `${TABLET_PORTRAIT} , ${TABLET_LANDSCAPE}`,\n  'WEB'               : `${WEB_PORTRAIT}, ${WEB_LANDSCAPE} `,\n\n  'HANDSET_PORTRAIT'  : `${HANDSET_PORTRAIT}`,\n  'TABLET_PORTRAIT'   : `${TABLET_PORTRAIT} `,\n  'WEB_PORTRAIT'      : `${WEB_PORTRAIT}`,\n\n  'HANDSET_LANDSCAPE' : `${HANDSET_LANDSCAPE}]`,\n  'TABLET_LANDSCAPE'  : `${TABLET_LANDSCAPE}`,\n  'WEB_LANDSCAPE'     : `${WEB_LANDSCAPE}`\n};\n\n/**\n * Extended Breakpoints for handset/tablets with landscape or portrait orientations\n */\nexport const ORIENTATION_BREAKPOINTS : BreakPoint[] = [\n  {'alias': 'handset',            'mediaQuery': ScreenTypes.HANDSET},\n  {'alias': 'handset.landscape',  'mediaQuery': ScreenTypes.HANDSET_LANDSCAPE},\n  {'alias': 'handset.portrait',   'mediaQuery': ScreenTypes.HANDSET_PORTRAIT},\n\n  {'alias': 'tablet',             'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.landscape',   'mediaQuery': ScreenTypes.TABLET},\n  {'alias': 'tablet.portrait',    'mediaQuery': ScreenTypes.TABLET_PORTRAIT},\n\n  {'alias': 'web',                'mediaQuery': ScreenTypes.WEB, overlapping : true },\n  {'alias': 'web.landscape',      'mediaQuery': ScreenTypes.WEB_LANDSCAPE, overlapping : true },\n  {'alias': 'web.portrait',       'mediaQuery': ScreenTypes.WEB_PORTRAIT, overlapping : true }\n];\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {BreakPoint} from '../break-point';\n\nexport const RESPONSIVE_ALIASES = [\n  'xs', 'gt-xs', 'sm', 'gt-sm', 'md', 'gt-md', 'lg', 'gt-lg', 'xl'\n];\n\nexport const DEFAULT_BREAKPOINTS: BreakPoint[] = [\n  {\n    alias: 'xs',\n    mediaQuery: '(max-width: 599px)'\n  },\n  {\n    alias: 'gt-xs',\n    overlapping: true,\n    mediaQuery: '(min-width: 600px)'\n  },\n  {\n    alias: 'lt-sm',\n    overlapping: true,\n    mediaQuery: '(max-width: 599px)'\n  },\n  {\n    alias: 'sm',\n    mediaQuery: '(min-width: 600px) and (max-width: 959px)'\n  },\n  {\n    alias: 'gt-sm',\n    overlapping: true,\n    mediaQuery: '(min-width: 960px)'\n  },\n  {\n    alias: 'lt-md',\n    overlapping: true,\n    mediaQuery: '(max-width: 959px)'\n  },\n  {\n    alias: 'md',\n    mediaQuery: '(min-width: 960px) and (max-width: 1279px)'\n  },\n  {\n    alias: 'gt-md',\n    overlapping: true,\n    mediaQuery: '(min-width: 1280px)'\n  },\n  {\n    alias: 'lt-lg',\n    overlapping: true,\n    mediaQuery: '(max-width: 1279px)'\n  },\n  {\n    alias: 'lg',\n    mediaQuery: '(min-width: 1280px) and (max-width: 1919px)'\n  },\n  {\n    alias: 'gt-lg',\n    overlapping: true,\n    mediaQuery: '(min-width: 1920px)'\n  },\n  {\n    alias: 'lt-xl',\n    overlapping: true,\n    mediaQuery: '(max-width: 1920px)'\n  },\n  {\n    alias: 'xl',\n    mediaQuery: '(min-width: 1920px) and (max-width: 5000px)'\n  }\n];\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  Optional,\n  SkipSelf\n} from '@angular/core';\n\nimport {BreakPointRegistry} from './breakpoints/break-point-registry';\n\nimport {MatchMedia} from './match-media';\nimport {ObservableMedia, MediaService} from './observable-media';\n\n/**\n * Ensure a single global ObservableMedia service provider\n */\nexport function OBSERVABLE_MEDIA_PROVIDER_FACTORY(parentService: ObservableMedia,\n                                                  matchMedia: MatchMedia,\n                                                  breakpoints: BreakPointRegistry) {\n  return parentService || new MediaService(breakpoints, matchMedia);\n}\n/**\n *  Provider to return global service for observable service for all MediaQuery activations\n */\nexport const OBSERVABLE_MEDIA_PROVIDER = { // tslint:disable-line:variable-name\n  provide: ObservableMedia,\n  deps: [\n    [ new Optional(), new SkipSelf(), ObservableMedia ],\n    MatchMedia,\n    BreakPointRegistry\n  ],\n  useFactory: OBSERVABLE_MEDIA_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\nimport {Subscription} from 'rxjs/Subscription';\nimport {Observable, Subscribable} from 'rxjs/Observable';\n\nimport {map} from 'rxjs/operator/map';\nimport {filter} from 'rxjs/operator/filter';\n\nimport {BreakPointRegistry} from './breakpoints/break-point-registry';\n\nimport {MediaChange} from './media-change';\nimport {MatchMedia} from './match-media';\nimport {mergeAlias} from './../utils/add-alias';\nimport {BreakPoint} from './breakpoints/break-point';\n\n/**\n * Base class for MediaService and pseudo-token for\n */\nexport abstract class ObservableMedia implements Subscribable<MediaChange> {\n  abstract isActive(query: string): boolean;\n\n  abstract asObservable(): Observable<MediaChange>;\n\n  abstract subscribe(next?: (value: MediaChange) => void,\n                     error?: (error: any) => void,\n                     complete?: () => void): Subscription;\n}\n\n/**\n * Class internalizes a MatchMedia service and exposes an Subscribable and Observable interface.\n\n * This an Observable with that exposes a feature to subscribe to mediaQuery\n * changes and a validator method (`isActive(<alias>)`) to test if a mediaQuery (or alias) is\n * currently active.\n *\n * !! Only mediaChange activations (not de-activations) are announced by the ObservableMedia\n *\n * This class uses the BreakPoint Registry to inject alias information into the raw MediaChange\n * notification. For custom mediaQuery notifications, alias information will not be injected and\n * those fields will be ''.\n *\n * !! This is not an actual Observable. It is a wrapper of an Observable used to publish additional\n * methods like `isActive(<alias>). To access the Observable and use RxJS operators, use\n * `.asObservable()` with syntax like media.asObservable().map(....).\n *\n *  @usage\n *\n *  // RxJS\n *  import 'rxjs/add/operator/filter';\n *  import { ObservableMedia } from '@angular/flex-layout';\n *\n *  @Component({ ... })\n *  export class AppComponent {\n *    status : string = '';\n *\n *    constructor(  media:ObservableMedia ) {\n *      let onChange = (change:MediaChange) => {\n *        this.status = change ? `'${change.mqAlias}' = (${change.mediaQuery})` : '';\n *      };\n *\n *      // Subscribe directly or access observable to use filter/map operators\n *      // e.g.\n *      //      media.subscribe(onChange);\n *\n *      media.asObservable()\n *        .filter((change:MediaChange) => true)   // silly noop filter\n *        .subscribe(onChange);\n *    }\n *  }\n */\n@Injectable()\nexport class MediaService implements ObservableMedia {\n  /**\n   * Should we announce gt-<xxx> breakpoint activations ?\n   */\n  public filterOverlaps = true;\n\n  constructor(private breakpoints: BreakPointRegistry,\n              private mediaWatcher: MatchMedia) {\n    this._registerBreakPoints();\n    this.observable$ = this._buildObservable();\n  }\n\n  /**\n   * Test if specified query/alias is active.\n   */\n  isActive(alias): boolean {\n    let query = this._toMediaQuery(alias);\n    return this.mediaWatcher.isActive(query);\n  }\n\n  /**\n   * Proxy to the Observable subscribe method\n   */\n  subscribe(next?: (value: MediaChange) => void,\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n    return this.observable$.subscribe(next, error, complete);\n  }\n\n  /**\n   * Access to observable for use with operators like\n   * .filter(), .map(), etc.\n   */\n  asObservable(): Observable<MediaChange> {\n    return this.observable$;\n  }\n\n  // ************************************************\n  // Internal Methods\n  // ************************************************\n\n  /**\n   * Register all the mediaQueries registered in the BreakPointRegistry\n   * This is needed so subscribers can be auto-notified of all standard, registered\n   * mediaQuery activations\n   */\n  private _registerBreakPoints() {\n    let queries = this.breakpoints.sortedItems.map(bp => bp.mediaQuery);\n    this.mediaWatcher.registerQuery(queries);\n  }\n\n  /**\n   * Prepare internal observable\n   *\n   * NOTE: the raw MediaChange events [from MatchMedia] do not\n   *       contain important alias information; as such this info\n   *       must be injected into the MediaChange\n   */\n  private _buildObservable() {\n    const self = this;\n    const activationsOnly = (change: MediaChange) => {\n      return change.matches === true;\n    };\n    const addAliasInformation = (change: MediaChange) => {\n      return mergeAlias(change, this._findByQuery(change.mediaQuery));\n    };\n    const excludeOverlaps = (change: MediaChange) => {\n      let bp = this.breakpoints.findByQuery(change.mediaQuery);\n      return !bp ? true : !(self.filterOverlaps && bp.overlapping);\n    };\n\n    /**\n     * Only pass/announce activations (not de-activations)\n     * Inject associated (if any) alias information into the MediaChange event\n     * Exclude mediaQuery activations for overlapping mQs. List bounded mQ ranges only\n     */\n    return filter.call(\n        map.call(\n            filter.call(\n                this.mediaWatcher.observe(),\n                activationsOnly\n            ),\n            addAliasInformation),\n        excludeOverlaps);\n  }\n\n  /**\n   * Breakpoint locator by alias\n   */\n  private _findByAlias(alias) {\n    return this.breakpoints.findByAlias(alias);\n  }\n\n  /**\n   * Breakpoint locator by mediaQuery\n   */\n  private _findByQuery(query) {\n    return this.breakpoints.findByQuery(query);\n  }\n\n  /**\n   * Find associated breakpoint (if any)\n   */\n  private _toMediaQuery(query) {\n    let bp: BreakPoint = this._findByAlias(query) || this._findByQuery(query);\n    return bp ? bp.mediaQuery : query;\n  }\n\n  private observable$: Observable<MediaChange>;\n}\n\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable} from '@angular/core';\n\nimport {BreakPoint} from './breakpoints/break-point';\nimport {BreakPointRegistry} from './breakpoints/break-point-registry';\nimport {MatchMedia} from './match-media';\nimport {MediaChange} from './media-change';\n\nimport {mergeAlias} from '../utils/add-alias';\n\nimport {Observable} from 'rxjs/Observable';\nimport {filter} from 'rxjs/operator/filter';\nimport {map} from 'rxjs/operator/map';\n\n/**\n * MediaMonitor uses the MatchMedia service to observe mediaQuery changes (both activations and\n * deactivations). These changes are are published as MediaChange notifications.\n *\n * Note: all notifications will be performed within the\n * ng Zone to trigger change detections and component updates.\n *\n * It is the MediaMonitor that:\n *  - auto registers all known breakpoints\n *  - injects alias information into each raw MediaChange event\n *  - provides accessor to the currently active BreakPoint\n *  - publish list of overlapping BreakPoint(s); used by ResponsiveActivation\n */\n@Injectable()\nexport class MediaMonitor {\n  constructor(private _breakpoints: BreakPointRegistry, private _matchMedia: MatchMedia) {\n    this._registerBreakpoints();\n  }\n\n  /**\n   * Read-only accessor to the list of breakpoints configured in the BreakPointRegistry provider\n   */\n  get breakpoints(): BreakPoint[] {\n    return [...this._breakpoints.items];\n  }\n\n  get activeOverlaps(): BreakPoint[] {\n    let items: BreakPoint[] = this._breakpoints.overlappings.reverse();\n    return items.filter((bp: BreakPoint) => {\n      return this._matchMedia.isActive(bp.mediaQuery);\n    });\n  }\n\n  get active(): BreakPoint {\n    let found = null, items = this.breakpoints.reverse();\n    items.forEach(bp => {\n      if (bp.alias !== '') {\n        if (!found && this._matchMedia.isActive(bp.mediaQuery)) {\n          found = bp;\n        }\n      }\n    });\n\n    let first = this.breakpoints[0];\n    return found || (this._matchMedia.isActive(first.mediaQuery) ? first : null);\n  }\n\n  /**\n   * For the specified mediaQuery alias, is the mediaQuery range active?\n   */\n  isActive(alias: string): boolean {\n    let bp = this._breakpoints.findByAlias(alias) || this._breakpoints.findByQuery(alias);\n    return this._matchMedia.isActive(bp ? bp.mediaQuery : alias);\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * If specific breakpoint is observed, only return *activated* events\n   * otherwise return all events for BOTH activated + deactivated changes.\n   */\n  observe(alias?: string): Observable<MediaChange> {\n    let bp = this._breakpoints.findByAlias(alias) || this._breakpoints.findByQuery(alias);\n    let hasAlias = (change: MediaChange) => (bp ? change.mqAlias !== '' : true);\n    // Note: the raw MediaChange events [from MatchMedia] do not contain important alias information\n\n    let media$ = this._matchMedia.observe(bp ? bp.mediaQuery : alias);\n    return filter.call(map.call(media$, change => mergeAlias(change, bp)), hasAlias);\n  }\n\n  /**\n   * Immediate calls to matchMedia() to establish listeners\n   * and prepare for immediate subscription notifications\n   */\n  private _registerBreakpoints() {\n    let queries = this._breakpoints.sortedItems.map(bp => bp.mediaQuery);\n    this._matchMedia.registerQuery(queries);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {MediaChange} from '../media-query/media-change';\nimport {BreakPoint} from '../media-query/breakpoints/break-point';\nimport {extendObject} from './object-extend';\n\n/**\n * For the specified MediaChange, make sure it contains the breakpoint alias\n * and suffix (if available).\n */\nexport function mergeAlias(dest: MediaChange, source: BreakPoint) {\n  return extendObject(dest, source ? {\n        mqAlias: source.alias,\n        suffix: source.suffix\n      } : {});\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Extends an object with the *enumerable* and *own* properties of one or more source objects,\n * similar to Object.assign.\n *\n * @param dest The object which will have properties copied to it.\n * @param sources The source objects from which properties will be copied.\n */\nexport function extendObject(dest: any, ...sources: any[]): any {\n  if (dest == null) {\n    throw TypeError('Cannot convert undefined or null to object');\n  }\n\n  for (let source of sources) {\n    if (source != null) {\n      for (let key in source) {\n        if (source.hasOwnProperty(key)) {\n          dest[key] = source[key];\n        }\n      }\n    }\n  }\n\n  return dest;\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Injectable, Inject} from '@angular/core';\n\nimport {BreakPoint} from './break-point';\nimport {BREAKPOINTS} from './break-points-token';\n\n\n/**\n * Registry of 1..n MediaQuery breakpoint ranges\n * This is published as a provider and may be overriden from custom, application-specific ranges\n *\n */\n@Injectable()\nexport class BreakPointRegistry {\n\n  constructor(@Inject(BREAKPOINTS) private _registry: BreakPoint[ ]) {\n  }\n\n  /**\n   * Accessor to raw list\n   */\n  get items(): BreakPoint[ ] {\n    return [...this._registry];\n  }\n\n  /**\n   * Accessor to sorted list used for registration with matchMedia API\n   *\n   * NOTE: During breakpoint registration, we want to register the overlaps FIRST\n   *       so the non-overlaps will trigger the MatchMedia:BehaviorSubject last!\n   *       And the largest, non-overlap, matching breakpoint should be the lastReplay value\n   */\n  get sortedItems(): BreakPoint[] {\n    let overlaps = this._registry.filter(it => it.overlapping === true);\n    let nonOverlaps = this._registry.filter(it => it.overlapping !== true);\n\n    return [...overlaps, ...nonOverlaps];\n  }\n\n  /**\n   * Search breakpoints by alias (e.g. gt-xs)\n   */\n  findByAlias(alias: string): BreakPoint {\n    return this._registry.find(bp => bp.alias == alias);\n  }\n\n  findByQuery(query: string): BreakPoint {\n    return this._registry.find(bp => bp.mediaQuery == query);\n  }\n\n  /**\n   * Get all the breakpoints whose ranges could overlapping `normal` ranges;\n   * e.g. gt-sm overlaps md, lg, and xl\n   */\n  get overlappings(): BreakPoint[] {\n    return this._registry.filter(it => it.overlapping == true);\n  }\n\n  /**\n   * Get list of all registered (non-empty) breakpoint aliases\n   */\n  get aliases(): string[] {\n    return this._registry.map(it => it.alias);\n  }\n\n  /**\n   * Aliases are mapped to properties using suffixes\n   * e.g.  'gt-sm' for property 'layout'  uses suffix 'GtSm'\n   * for property layoutGtSM.\n   */\n  get suffixes(): string[] {\n    return this._registry.map(it => it.suffix);\n  }\n}\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// @TODO - remove after updating to TS v2.4\n// tslint:disable:no-unused-variable\nimport {InjectionToken} from '@angular/core';\nimport {BreakPoint} from './break-point';\n\n/**\n *  Injection token unique to the flex-layout library.\n *  Use this token when build a custom provider (see below).\n */\nexport const BREAKPOINTS =\n    new InjectionToken<BreakPoint[]>('Token (@angular/flex-layout) Breakpoints');\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Inject, Injectable, NgZone} from '@angular/core';\nimport {ɵgetDOM as getDom, DOCUMENT} from '@angular/platform-browser';\nimport {BehaviorSubject} from 'rxjs/BehaviorSubject';\nimport {Observable} from 'rxjs/Observable';\nimport {filter} from 'rxjs/operator/filter';\n\nimport {MediaChange} from './media-change';\n\n/**\n * EventHandler callback with the mediaQuery [range] activates or deactivates\n */\nexport interface MediaQueryListListener {\n  // Function with Window's MediaQueryList argument\n  (mql: MediaQueryList): void;\n}\n\n/**\n * EventDispatcher for a specific mediaQuery [range]\n */\nexport interface MediaQueryList {\n  readonly matches: boolean;\n  readonly media: string;\n\n  addListener(listener: MediaQueryListListener): void;\n\n  removeListener(listener: MediaQueryListListener): void;\n}\n\n\n/**\n * MediaMonitor configures listeners to mediaQuery changes and publishes an Observable facade to\n * convert mediaQuery change callbacks to subscriber notifications. These notifications will be\n * performed within the ng Zone to trigger change detections and component updates.\n *\n * NOTE: both mediaQuery activations and de-activations are announced in notifications\n */\n@Injectable()\nexport class MatchMedia {\n  protected _registry: Map<string, MediaQueryList>;\n  protected _source: BehaviorSubject<MediaChange>;\n  protected _observable$: Observable<MediaChange>;\n\n  constructor(protected _zone: NgZone, @Inject(DOCUMENT) protected _document: any) {\n    this._registry = new Map<string, MediaQueryList>();\n    this._source = new BehaviorSubject<MediaChange>(new MediaChange(true));\n    this._observable$ = this._source.asObservable();\n  }\n\n  /**\n   * For the specified mediaQuery?\n   */\n  isActive(mediaQuery: string): boolean {\n    if (this._registry.has(mediaQuery)) {\n      let mql = this._registry.get(mediaQuery);\n      return mql.matches;\n    }\n    return false;\n  }\n\n  /**\n   * External observers can watch for all (or a specific) mql changes.\n   * Typically used by the MediaQueryAdaptor; optionally available to components\n   * who wish to use the MediaMonitor as mediaMonitor$ observable service.\n   *\n   * NOTE: if a mediaQuery is not specified, then ALL mediaQuery activations will\n   *       be announced.\n   */\n  observe(mediaQuery?: string): Observable<MediaChange> {\n    this.registerQuery(mediaQuery);\n\n    return filter.call(this._observable$, (change: MediaChange) => {\n      return mediaQuery ? (change.mediaQuery === mediaQuery) : true;\n    });\n  }\n\n  /**\n   * Based on the BreakPointRegistry provider, register internal listeners for each unique\n   * mediaQuery. Each listener emits specific MediaChange data to observers\n   */\n  registerQuery(mediaQuery: string | string[]) {\n    let list = normalizeQuery(mediaQuery);\n\n    if (list.length > 0) {\n      prepareQueryCSS(list, this._document);\n\n      list.forEach(query => {\n        let mql = this._registry.get(query);\n        let onMQLEvent = (e: MediaQueryList) => {\n          this._zone.run(() => {\n            let change = new MediaChange(e.matches, query);\n            this._source.next(change);\n          });\n        };\n\n        if (!mql) {\n          mql = this._buildMQL(query);\n          mql.addListener(onMQLEvent);\n          this._registry.set(query, mql);\n        }\n\n        if (mql.matches) {\n          onMQLEvent(mql);  // Announce activate range for initial subscribers\n        }\n      });\n    }\n  }\n\n  /**\n   * Call window.matchMedia() to build a MediaQueryList; which\n   * supports 0..n listeners for activation/deactivation\n   */\n  protected _buildMQL(query: string): MediaQueryList {\n    let canListen = isBrowser() && !!(<any>window).matchMedia('all').addListener;\n\n    return canListen ? (<any>window).matchMedia(query) : <MediaQueryList>{\n      matches: query === 'all' || query === '',\n      media: query,\n      addListener: () => {\n      },\n      removeListener: () => {\n      }\n    };\n  }\n}\n\n/**\n * Determine if SSR or Browser rendering.\n */\nexport function isBrowser() {\n  return getDom().supportsDOMEvents();\n}\n\n/**\n * Private global registry for all dynamically-created, injected style tags\n * @see prepare(query)\n */\nconst ALL_STYLES = {};\n\n/**\n * For Webkit engines that only trigger the MediaQueryList Listener\n * when there is at least one CSS selector for the respective media query.\n *\n * @param query string The mediaQuery used to create a faux CSS selector\n *\n */\nfunction prepareQueryCSS(mediaQueries: string[], _document: any) {\n  let list = mediaQueries.filter(it => !ALL_STYLES[it]);\n  if (list.length > 0) {\n    let query = list.join(', ');\n\n    try {\n      let styleEl = getDom().createElement('style');\n\n      getDom().setAttribute(styleEl, 'type', 'text/css');\n      if (!styleEl['styleSheet']) {\n        let cssText = `/*\n  @angular/flex-layout - workaround for possible browser quirk with mediaQuery listeners\n  see http://bit.ly/2sd4HMP\n*/\n@media ${query} {.fx-query-test{ }}`;\n        getDom().appendChild(styleEl, getDom().createTextNode(cssText));\n      }\n\n      getDom().appendChild(_document.head, styleEl);\n\n      // Store in private global registry\n      list.forEach(mq => ALL_STYLES[mq] = styleEl);\n\n    } catch (e) {\n      console.error(e);\n    }\n  }\n}\n\n/**\n * Always convert to unique list of queries; for iteration in ::registerQuery()\n */\nfunction normalizeQuery(mediaQuery: string | string[]): string[] {\n  return (typeof mediaQuery === 'undefined') ? [] :\n      (typeof mediaQuery === 'string') ? [mediaQuery] : unique(mediaQuery as string[]);\n}\n\n/**\n * Filter duplicate mediaQueries in the list\n */\nfunction unique(list: string[]): string[] {\n  let seen = {};\n  return list.filter(item => {\n    return seen.hasOwnProperty(item) ? false : (seen[item] = true);\n  });\n}\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport type MediaQuerySubscriber = (changes: MediaChange) => void;\n\n/**\n * Class instances emitted [to observers] for each mql notification\n */\nexport class MediaChange {\n  property: string;\n  value: any;\n\n  constructor(public matches = false,       // Is the mq currently activated\n              public mediaQuery = 'all',    // e.g.   (min-width: 600px) and (max-width: 959px)\n              public mqAlias = '',          // e.g.   gt-sm, md, gt-lg\n              public suffix = ''            // e.g.   GtSM, Md, GtLg\n  ) { }\n\n  clone() {\n    return new MediaChange(this.matches, this.mediaQuery, this.mqAlias, this.suffix);\n  }\n}\n\n\n","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Version} from '@angular/core';\n\n/** Current version of Angular Flex-Layout. */\nexport const VERSION = new Version('2.0.0-beta.8-d171c33');\n"],"names":["_","map","getDom"],"mappings":"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"}