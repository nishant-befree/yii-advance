{"version":3,"sources":["../../src/lib/color-picker.directive.ts"],"names":[],"mappings":"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","file":"color-picker.directive.js","sourceRoot":"","sourcesContent":["import { OnInit, OnChanges, Directive, Input, Output, EventEmitter, Injector, ApplicationRef, ElementRef, ViewContainerRef, ReflectiveInjector, ComponentFactoryResolver } from '@angular/core';\n\nimport { ColorPickerService } from './color-picker.service';\nimport { ColorPickerComponent } from './color-picker.component';\n\nimport { SliderPosition, SliderDimension} from './helpers';\n\n\nexport class ColorPickerDirective implements OnInit, OnChanges {\n     colorPicker: string;\n     cpToggle: boolean;\n     cpPosition: string = 'right';\n     cpPositionOffset: string = '0%';\n     cpPositionRelativeToArrow: boolean = false;\n     cpOutputFormat: string = 'hex';\n     cpPresetLabel: string = 'Preset colors';\n     cpPresetColors: Array<string>;\n     cpCancelButton: boolean = false;\n     cpCancelButtonClass: string = 'cp-cancel-button-class';\n     cpCancelButtonText: string = 'Cancel';\n     cpOKButton: boolean = false;\n     cpOKButtonClass: string = 'cp-ok-button-class';\n     cpOKButtonText: string = 'OK';\n     cpFallbackColor: string = '#000';\n     cpHeight: string = 'auto';\n     cpWidth: string = '230px';\n     cpIgnoredElements: any = [];\n     cpDialogDisplay: string = 'popup';\n     cpSaveClickOutside: boolean = true;\n     cpAlphaChannel: string = 'enabled';\n     cpUseRootViewContainer: boolean = false;\n\n     cpInputChange = new EventEmitter<any>(true);\n\n     cpToggleChange = new EventEmitter<boolean>(true);\n\n     cpSliderChange = new EventEmitter<any>(true);\n     cpSliderDragEnd = new EventEmitter<string>(true);\n     cpSliderDragStart = new EventEmitter<string>(true);\n\n     colorPickerCancel = new EventEmitter<string>(true);\n     colorPickerSelect = new EventEmitter<string>(true);\n     colorPickerChange = new EventEmitter<string>(false);\n\n    private dialog: any;\n    private created: boolean;\n    private ignoreChanges: boolean = false;\n\n    constructor(private injector: Injector, private cfr: ComponentFactoryResolver,\n      private appRef: ApplicationRef, private vcRef: ViewContainerRef, private elRef: ElementRef,\n      private service: ColorPickerService)\n    {\n        this.created = false;\n    }\n\n    ngOnChanges(changes: any): void {\n        if (changes.cpToggle) {\n            if (changes.cpToggle.currentValue) this.openDialog();\n            if (!changes.cpToggle.currentValue && this.dialog) this.dialog.closeColorPicker();\n        }\n        if (changes.colorPicker) {\n            if (this.dialog && !this.ignoreChanges) {\n                if (this.cpDialogDisplay === 'inline') {\n                    this.dialog.setInitialColor(changes.colorPicker.currentValue);\n                }\n                this.dialog.setColorFromString(changes.colorPicker.currentValue, false);\n\n            }\n            this.ignoreChanges = false;\n        }\n        if (changes.cpPresetLabel || changes.cpPresetColors) {\n            if (this.dialog) {\n                this.dialog.setPresetConfig(this.cpPresetLabel, this.cpPresetColors);\n            }\n        }\n    }\n\n    ngOnInit() {\n        this.colorPicker = this.colorPicker || this.cpFallbackColor || 'rgba(0, 0, 0, 1)';\n        /*let hsva = this.service.stringToHsva(this.colorPicker);\n        if (hsva === null) hsva = this.service.stringToHsva(this.colorPicker, true);\n        if (hsva == null) {\n            hsva = this.service.stringToHsva(this.cpFallbackColor);\n        }\n        let color = this.service.outputFormat(hsva, this.cpOutputFormat, this.cpAlphaChannel);\n        if (color !== this.colorPicker) {\n            //setTimeout(() => {\n              this.colorPickerChange.emit(color);\n              this.cdr.detectChanges();\n            //}, 0);\n        }*/\n    }\n\n    onClick() {\n        if (this.cpIgnoredElements.filter((item: any) => item === this.elRef.nativeElement).length === 0) {\n            this.openDialog();\n        }\n    }\n\n    openDialog() {\n        if (!this.created) {\n            this.created = true;\n            let vcRef = this.vcRef;\n            if (this.cpUseRootViewContainer && this.cpDialogDisplay !== 'inline') {\n              let classOfRootComponent = this.appRef.componentTypes[0];\n              let appInstance = this.injector.get(classOfRootComponent);\n              vcRef = appInstance.vcRef || appInstance.viewContainerRef || this.vcRef;\n              if (vcRef === this.vcRef) {\n                console.warn(\"You are using cpUseRootViewContainer, but the root component is not exposing viewContainerRef!\" +\n                  \"Please expose it by adding 'public vcRef: ViewContainerRef' to the constructor.\");\n              }\n            }\n            const compFactory = this.cfr.resolveComponentFactory(ColorPickerComponent);\n            const injector = ReflectiveInjector.fromResolvedProviders([], vcRef.parentInjector);\n            const cmpRef = vcRef.createComponent(compFactory, 0, injector, []);\n            cmpRef.instance.setDialog(this, this.elRef, this.colorPicker, this.cpPosition, this.cpPositionOffset,\n                this.cpPositionRelativeToArrow, this.cpOutputFormat, this.cpPresetLabel, this.cpPresetColors,\n                this.cpCancelButton, this.cpCancelButtonClass, this.cpCancelButtonText, this.cpOKButton,\n                this.cpOKButtonClass, this.cpOKButtonText, this.cpHeight, this.cpWidth, this.cpIgnoredElements,\n                this.cpDialogDisplay, this.cpSaveClickOutside, this.cpAlphaChannel, this.cpUseRootViewContainer);\n            this.dialog = cmpRef.instance;\n\n            if (this.vcRef !== vcRef) {\n              cmpRef.changeDetectorRef.detectChanges();\n            }\n        } else if (this.dialog) {\n            this.dialog.openDialog(this.colorPicker);\n        }\n    }\n\n    toggle(value: boolean) {\n        this.cpToggleChange.emit(value);\n    }\n\n    colorChanged(value: string, ignore: boolean = true) {\n        this.ignoreChanges = ignore;\n        this.colorPickerChange.emit(value);\n    }\n\n    colorCanceled() {\n      this.colorPickerCancel.emit();\n    }\n\n    colorSelected(value: string) {\n        this.colorPickerSelect.emit(value);\n    }\n\n    inputChange(value: string) {\n        this.dialog.setColorFromString(value, true);\n    }\n\n    inputChanged(event: any) {\n        this.cpInputChange.emit(event);\n    }\n\n    sliderChanged(event: any) {\n        this.cpSliderChange.emit(event);\n    }\n\n    sliderDragEnd(event: any) {\n        this.cpSliderDragEnd.emit(event);\n    }\n\n    sliderDragStart(event: any) {\n        this.cpSliderDragStart.emit(event);\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[colorPicker]',\n    host: {\n        '(input)': 'inputChange($event.target.value)',\n        '(click)': 'onClick()'\n    }\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Injector, },\n{type: ComponentFactoryResolver, },\n{type: ApplicationRef, },\n{type: ViewContainerRef, },\n{type: ElementRef, },\n{type: ColorPickerService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'colorPicker': [{ type: Input, args: ['colorPicker', ] },],\n'cpToggle': [{ type: Input, args: ['cpToggle', ] },],\n'cpPosition': [{ type: Input, args: ['cpPosition', ] },],\n'cpPositionOffset': [{ type: Input, args: ['cpPositionOffset', ] },],\n'cpPositionRelativeToArrow': [{ type: Input, args: ['cpPositionRelativeToArrow', ] },],\n'cpOutputFormat': [{ type: Input, args: ['cpOutputFormat', ] },],\n'cpPresetLabel': [{ type: Input, args: ['cpPresetLabel', ] },],\n'cpPresetColors': [{ type: Input, args: ['cpPresetColors', ] },],\n'cpCancelButton': [{ type: Input, args: ['cpCancelButton', ] },],\n'cpCancelButtonClass': [{ type: Input, args: ['cpCancelButtonClass', ] },],\n'cpCancelButtonText': [{ type: Input, args: ['cpCancelButtonText', ] },],\n'cpOKButton': [{ type: Input, args: ['cpOKButton', ] },],\n'cpOKButtonClass': [{ type: Input, args: ['cpOKButtonClass', ] },],\n'cpOKButtonText': [{ type: Input, args: ['cpOKButtonText', ] },],\n'cpFallbackColor': [{ type: Input, args: ['cpFallbackColor', ] },],\n'cpHeight': [{ type: Input, args: ['cpHeight', ] },],\n'cpWidth': [{ type: Input, args: ['cpWidth', ] },],\n'cpIgnoredElements': [{ type: Input, args: ['cpIgnoredElements', ] },],\n'cpDialogDisplay': [{ type: Input, args: ['cpDialogDisplay', ] },],\n'cpSaveClickOutside': [{ type: Input, args: ['cpSaveClickOutside', ] },],\n'cpAlphaChannel': [{ type: Input, args: ['cpAlphaChannel', ] },],\n'cpUseRootViewContainer': [{ type: Input, args: ['cpUseRootViewContainer', ] },],\n'cpInputChange': [{ type: Output, args: ['cpInputChange', ] },],\n'cpToggleChange': [{ type: Output, args: ['cpToggleChange', ] },],\n'cpSliderChange': [{ type: Output, args: ['cpSliderChange', ] },],\n'cpSliderDragEnd': [{ type: Output, args: ['cpSliderDragEnd', ] },],\n'cpSliderDragStart': [{ type: Output, args: ['cpSliderDragStart', ] },],\n'colorPickerCancel': [{ type: Output, args: ['colorPickerCancel', ] },],\n'colorPickerSelect': [{ type: Output, args: ['colorPickerSelect', ] },],\n'colorPickerChange': [{ type: Output, args: ['colorPickerChange', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}