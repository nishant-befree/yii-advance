{"version":3,"file":"menu-trigger.js","sourceRoot":"","sources":["../../../src/lib/menu/menu-trigger.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Directive,\n  ElementRef,\n  Renderer,\n} from '@angular/core';\n\n@Directive({\n  selector: '[md2-menu-trigger]',\n  host: {\n    'aria-haspopup': 'true',\n    '(click)': '_toggleMenu()',\n  },\n  exportAs: 'md2MenuTrigger'\n})\nexport class Md2MenuTrigger {\n\n  private _handleClick: any;\n\n  constructor(private _element: ElementRef, private _renderer: Renderer) { }\n\n  ngAfterViewInit() {\n    this._handleClick = this._renderer.listenGlobal('document', 'click', (event: Event) => {\n      if (!this._hasChildMenu(event)) {\n        this._closeMenu();\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this._handleClick = null;\n  }\n\n  _toggleMenu() {\n    if (this._hasClass(this._getParentElement(), 'open')) {\n      this._closeMenu();\n    } else {\n      this._openMenu();\n    }\n  }\n\n  _openMenu() {\n    this._getParentElement().classList.add('open');\n    let siblingElements = this._getSiblingElements(this._getParentElement());\n    siblingElements.forEach((el: Element) => {\n      el.classList.remove('open');\n      this._closeChildrenMenu(el);\n    });\n  }\n\n  _closeMenu() {\n    this._getParentElement().classList.remove('open');\n    this._closeChildrenMenu(this._getParentElement());\n  }\n\n  _closeChildrenMenu(element: Element) {\n    [].forEach.call(element.querySelectorAll('.open'), (el: Element) => {\n      el.classList.remove('open');\n    });\n  }\n\n  _getHostElement(): HTMLElement {\n    return this._element.nativeElement;\n  }\n\n  _getParentElement(): HTMLElement {\n    return this._element.nativeElement.parentNode;\n  }\n\n  _getSiblingElements(element: Element) {\n    let siblingElements: Array<Node> = [];\n    let el = element.parentNode.firstChild;\n    for (; el; el = el.nextSibling) {\n      if (el.nodeType == 1 && el !== element) {\n        siblingElements.push(el);\n      }\n    }\n    return siblingElements;\n  }\n\n  _getClosestElement(element: Element, target: string): Element {\n    if (element.hasAttribute(target)) {\n      return element;\n    }\n\n    let parentEl: Element;\n    while (element) {\n      parentEl = element.parentElement;\n      if (parentEl && parentEl.hasAttribute(target)) {\n        return parentEl;\n      }\n      element = parentEl;\n    }\n    return null;\n  }\n\n  _hasClass(element: Element, className: string) {\n    return (' ' + element.className + ' ').indexOf(' ' + className + ' ') > -1;\n  }\n\n  _hasChildMenu(event: any) {\n    let el = this._getClosestElement(event.target, 'md2-menu-trigger');\n    if (el && el === this._getHostElement()) {\n      return true;\n    } else if (this._getParentElement().contains(event.target)) {\n      el = this._getClosestElement(event.target, 'md2-menu-item');\n      if (el && el.querySelectorAll('[md2-menu-content]').length > 0) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n\n}\n"]}