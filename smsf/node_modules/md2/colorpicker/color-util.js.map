{"version":3,"file":"color-util.js","sourceRoot":"","sources":["../../../src/lib/colorpicker/color-util.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\n\nexport const COLOR_RGB = /(rgb)a?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*%?,\\s*(\\d{1,3})\\s*%?(?:,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)/;\nexport const COLOR_HSL = /(hsl)a?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})%\\s*,\\s*(\\d{1,3})%\\s*(?:,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)/;\n\nexport class Hsva {\n  constructor(public h: number, public s: number, public v: number, public a: number) { }\n}\nexport class Hsla {\n  constructor(public h: number, public s: number, public l: number, public a: number) { }\n}\nexport class Rgba {\n  constructor(public r: number, public g: number, public b: number, public a: number) { }\n}\n\n@Injectable()\nexport class ColorUtil {\n  /**\n* hsla to hsva\n* @param hsla\n*/\n  hsla2hsva(hsla: Hsla) {\n    let h: number = Math.min(hsla.h, 1), s = Math.min(hsla.s, 1), l = Math.min(hsla.l, 1);\n    let a = Math.min(hsla.a, 1);\n    if (l === 0) {\n      return { h: h, s: 0, v: 0, a: a };\n    } else {\n      let v: number = l + s * (1 - Math.abs(2 * l - 1)) / 2;\n      return { h: h, s: 2 * (v - l) / v, v: v, a: a };\n    }\n  }\n\n  /**\n  * hsva to hsla\n  * @param hsva\n  */\n  hsva2hsla(hsva: Hsva) {\n    let h = hsva.h, s = hsva.s, v = hsva.v, a = hsva.a;\n    if (v === 0) {\n      return new Hsla(h, 0, 0, a);\n    } else if (s === 0 && v === 1) {\n      return new Hsla(h, 1, 1, a);\n    } else {\n      let l: number = v * (2 - s) / 2;\n      return new Hsla(h, v * s / (1 - Math.abs(2 * l - 1)), l, a);\n    }\n  }\n\n  /**\n   * rgba to hsva\n   * @param rgba\n   */\n  rgbaToHsva(rgba: Rgba) {\n    let r: number = Math.min(rgba.r, 1), g = Math.min(rgba.g, 1), b = Math.min(rgba.b, 1);\n    let a = Math.min(rgba.a, 1);\n    let max: number = Math.max(r, g, b), min = Math.min(r, g, b);\n    let h: number, s: number, v: number = max;\n    let d: number = max - min;\n    s = max === 0 ? 0 : d / max;\n\n    if (max === min) {\n      h = 0;\n    } else {\n      switch (max) {\n        case r:\n          h = (g - b) / d + (g < b ? 6 : 0);\n          break;\n        case g:\n          h = (b - r) / d + 2;\n          break;\n        case b:\n          h = (r - g) / d + 4;\n          break;\n      }\n      h /= 6;\n    }\n\n    return new Hsva(h, s, v, a);\n  }\n\n  /**\n   * hsva to rgba\n   * @param hsva\n   */\n  hsvaToRgba(hsva: Hsva) {\n    let h: number = hsva.h, s: number = hsva.s, v: number = hsva.v, a: number = hsva.a;\n    let r: number, g: number, b: number;\n\n    let i: number = Math.floor(h * 6);\n    let f: number = h * 6 - i;\n    let p: number = v * (1 - s);\n    let q: number = v * (1 - f * s);\n    let t: number = v * (1 - (1 - f) * s);\n\n    switch (i % 6) {\n      case 0:\n        r = v; g = t; b = p;\n        break;\n      case 1:\n        r = q; g = v; b = p;\n        break;\n      case 2:\n        r = p; g = v; b = t;\n        break;\n      case 3:\n        r = p; g = q; b = v;\n        break;\n      case 4:\n        r = t; g = p; b = v;\n        break;\n      case 5:\n        r = v; g = p; b = q;\n        break;\n    }\n\n    return new Rgba(r, g, b, a);\n  }\n\n  /**\n   * string to hsva\n   * @param colorString\n   */\n  stringToHsva(colorString: string) {\n    let stringParsers = [\n      {\n        re: COLOR_RGB,\n        parse: function (execResult: Array<string>) {\n          return new Rgba(parseInt(execResult[2]) / 255,\n            parseInt(execResult[3]) / 255,\n            parseInt(execResult[4]) / 255,\n            isNaN(parseFloat(execResult[5])) ? 1 : parseFloat(execResult[5]));\n        }\n      },\n      {\n        re: COLOR_HSL,\n        parse: function (execResult: Array<string>) {\n          return new Hsla(parseInt(execResult[2]) / 360,\n            parseInt(execResult[3]) / 100,\n            parseInt(execResult[4]) / 100,\n            isNaN(parseFloat(execResult[5])) ? 1 : parseFloat(execResult[5]));\n        }\n      },\n      {\n        re: /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})$/,\n        parse: function (execResult: Array<string>) {\n          return new Rgba(parseInt(execResult[1], 16) / 255,\n            parseInt(execResult[2], 16) / 255,\n            parseInt(execResult[3], 16) / 255,\n            1);\n        }\n      },\n      {\n        re: /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])$/,\n        parse: function (execResult: Array<string>) {\n          return new Rgba(parseInt(execResult[1] + execResult[1], 16) / 255,\n            parseInt(execResult[2] + execResult[2], 16) / 255,\n            parseInt(execResult[3] + execResult[3], 16) / 255,\n            1);\n        }\n      }\n    ];\n    colorString = colorString.toLowerCase();\n    let hsva: any = null;\n    for (let key in stringParsers) {\n      if (stringParsers.hasOwnProperty(key)) {\n        let parser = stringParsers[key];\n        let match: Array<string> = parser.re.exec(colorString);\n        let color = match && parser.parse(match);\n        if (color) {\n          if (color instanceof Rgba) {\n            hsva = this.rgbaToHsva(color);\n          } else if (color instanceof Hsla) {\n            hsva = this.hsla2hsva(color);\n          }\n          return hsva;\n        }\n      }\n    }\n    return hsva;\n  }\n\n  /**\n   * output formate of color\n   * @param hsva\n   * @param outputFormat\n   */\n  outputFormat(hsva: Hsva, outputFormat: string) {\n    if (hsva.a < 1) {\n      switch (outputFormat) {\n        case 'hsl':\n          let hsla = this.hsva2hsla(hsva);\n          let hslaText = new Hsla(Math.round((hsla.h) * 360), Math.round(hsla.s * 100),\n            Math.round(hsla.l * 100), Math.round(hsla.a * 100) / 100\n          );\n          return 'hsla(' + hslaText.h + ',' + hslaText.s + '%,' +\n            hslaText.l + '%,' + hslaText.a + ')';\n        default:\n          let rgba = this.denormalizeRGBA(this.hsvaToRgba(hsva));\n          return 'rgba(' + rgba.r + ',' + rgba.g + ',' + rgba.b +\n            ',' + Math.round(rgba.a * 100) / 100 + ')';\n      }\n    } else {\n      switch (outputFormat) {\n        case 'hsl':\n          let hsla = this.hsva2hsla(hsva);\n          let hslaText = new Hsla(Math.round((hsla.h) * 360), Math.round(hsla.s * 100),\n            Math.round(hsla.l * 100), Math.round(hsla.a * 100) / 100);\n          return 'hsl(' + hslaText.h + ',' + hslaText.s + '%,' + hslaText.l + '%)';\n        case 'rgb':\n          let rgba = this.denormalizeRGBA(this.hsvaToRgba(hsva));\n          return 'rgb(' + rgba.r + ',' + rgba.g + ',' + rgba.b + ')';\n        default:\n          return this.hexText(this.denormalizeRGBA(this.hsvaToRgba(hsva)));\n      }\n    }\n  }\n  hexText(rgba: Rgba) {\n    let mainText = ((1 << 24) | (rgba.r << 16) | (rgba.g << 8) | rgba.b).toString(16);\n    let hexText = '#' + mainText.substr(1);\n    return hexText.toLowerCase();\n  }\n\n  denormalizeRGBA(rgba: Rgba) {\n    return new Rgba(Math.round(rgba.r * 255), Math.round(rgba.g * 255),\n      Math.round(rgba.b * 255), rgba.a);\n  }\n}\n"]}