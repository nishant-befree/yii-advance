{"version":3,"file":"tooltip.js","sourceRoot":"","sources":["../../../src/lib/tooltip/tooltip.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component,\n  Directive,\n  Input,\n  ElementRef,\n  ViewContainerRef,\n  NgZone,\n  Optional,\n  OnDestroy,\n  Renderer2,\n  ChangeDetectorRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  style,\n  trigger,\n  state,\n  transition,\n  animate,\n  AnimationEvent,\n} from '@angular/animations';\nimport {\n  Overlay,\n  OverlayState,\n  OverlayRef,\n  ComponentPortal,\n  OverlayConnectionPosition,\n  OriginConnectionPosition,\n} from '../core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { Dir } from '../core/rtl/dir';\nimport { Platform } from '../core/platform/index';\nimport 'rxjs/add/operator/first';\nimport { ScrollDispatcher } from '../core/overlay/scroll/scroll-dispatcher';\nimport { coerceBooleanProperty } from '../core/coercion/boolean-property';\n\nexport type TooltipPosition = 'left' | 'right' | 'above' | 'below' | 'before' | 'after';\n\n/** Time in ms to delay before changing the tooltip visibility to hidden */\nexport const TOUCHEND_HIDE_DELAY = 1500;\n\n/** Time in ms to throttle repositioning after scroll events. */\nexport const SCROLL_THROTTLE_MS = 20;\n\n/** Throws an error if the user supplied an invalid tooltip position. */\nexport function throwMd2TooltipInvalidPositionError(position: string) {\n  throw new Error(`Tooltip position \"${position}\" is invalid.`);\n}\n\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.google.com/components/tooltips.html\n */\n@Directive({\n  selector: '[tooltip]',\n  host: {\n    '(longpress)': 'show()',\n    '(touchend)': 'hide(' + TOUCHEND_HIDE_DELAY + ')',\n  },\n  exportAs: 'md2Tooltip',\n})\nexport class Md2Tooltip implements OnDestroy {\n  _overlayRef: OverlayRef;\n  _tooltipInstance: Md2TooltipComponent;\n\n  private _position: TooltipPosition = 'below';\n  private _disabled: boolean = false;\n\n  /** Allows the user to define the position of the tooltip relative to the parent element */\n  @Input('tooltip-position')\n  get position(): TooltipPosition { return this._position; }\n  set position(value: TooltipPosition) {\n    if (value !== this._position) {\n      this._position = value;\n\n      // TODO(andrewjs): When the overlay's position can be dynamically changed, do not destroy\n      // the tooltip.\n      if (this._tooltipInstance) {\n        this._disposeTooltip();\n      }\n    }\n  }\n\n  /** Disables the display of the tooltip. */\n  @Input('tooltipDisabled')\n  get disabled(): boolean { return this._disabled; }\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n\n    // If tooltip is disabled, hide immediately.\n    if (this._disabled) {\n      this.hide(0);\n    }\n  }\n\n  /** The default delay in ms before showing the tooltip after show is called */\n  @Input('tooltip-delay') showDelay = 0;\n\n  /** The default delay in ms before hiding the tooltip after hide is called */\n  @Input('tooltip-hide-delay') hideDelay = 0;\n\n  private _message: string;\n\n  /** The message to be displayed in the tooltip */\n  @Input('tooltip') get message() { return this._message; }\n  set message(value: string) {\n    this._message = value;\n    if (this._tooltipInstance) {\n      this._setTooltipMessage(this._message);\n    }\n  }\n\n  constructor(private _overlay: Overlay,\n    private _elementRef: ElementRef,\n    private _scrollDispatcher: ScrollDispatcher,\n    private _viewContainerRef: ViewContainerRef,\n    private _ngZone: NgZone,\n    private _renderer: Renderer2,\n    private _platform: Platform,\n    @Optional() private _dir: Dir) {\n\n    // The mouse events shouldn't be bound on iOS devices, because\n    // they can prevent the first tap from firing its click event.\n    if (!_platform.IOS) {\n      _renderer.listen(_elementRef.nativeElement, 'mouseenter', () => this.show());\n      _renderer.listen(_elementRef.nativeElement, 'mouseleave', () => this.hide());\n    }\n  }\n\n  /**\n   * Dispose the tooltip when destroyed.\n   */\n  ngOnDestroy() {\n    if (this._tooltipInstance) {\n      this._disposeTooltip();\n    }\n  }\n\n  /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n  show(delay: number = this.showDelay): void {\n    if (this.disabled || !this._message || !this._message.trim()) { return; }\n\n    if (!this._tooltipInstance) {\n      this._createTooltip();\n    }\n\n    this._setTooltipMessage(this._message);\n    this._tooltipInstance.show(this._position, delay);\n  }\n\n  /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n  hide(delay: number = this.hideDelay): void {\n    if (this._tooltipInstance) {\n      this._tooltipInstance.hide(delay);\n    }\n  }\n\n  /** Shows/hides the tooltip */\n  toggle(): void {\n    this._isTooltipVisible() ? this.hide() : this.show();\n  }\n\n  /** Returns true if the tooltip is currently visible to the user */\n  _isTooltipVisible(): boolean {\n    return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n  }\n\n  /** Create the tooltip to display */\n  private _createTooltip(): void {\n    this._createOverlay();\n    let portal = new ComponentPortal(Md2TooltipComponent, this._viewContainerRef);\n    this._tooltipInstance = this._overlayRef.attach(portal).instance;\n\n    // Dispose the overlay when finished the shown tooltip.\n    this._tooltipInstance.afterHidden().subscribe(() => {\n      // Check first if the tooltip has already been removed through this components destroy.\n      if (this._tooltipInstance) {\n        this._disposeTooltip();\n      }\n    });\n  }\n\n  /** Create the overlay config and position strategy */\n  private _createOverlay(): void {\n    let origin = this._getOrigin();\n    let position = this._getOverlayPosition();\n\n    // Create connected position strategy that listens for scroll events to reposition.\n    // After position changes occur and the overlay is clipped by a parent scrollable then\n    // close the tooltip.\n    let strategy = this._overlay.position().connectedTo(this._elementRef, origin, position);\n    strategy.withScrollableContainers(this._scrollDispatcher.getScrollContainers(this._elementRef));\n    strategy.onPositionChange.subscribe(change => {\n      if (change.scrollableViewProperties.isOverlayClipped &&\n        this._tooltipInstance && this._tooltipInstance.isVisible()) {\n        this.hide(0);\n      }\n    });\n\n    let config = new OverlayState();\n\n    config.direction = this._dir ? this._dir.value : 'ltr';\n    config.positionStrategy = strategy;\n    config.scrollStrategy = this._overlay.scrollStrategies.reposition({\n      scrollThrottle: SCROLL_THROTTLE_MS\n    });\n\n    this._overlayRef = this._overlay.create(config);\n  }\n\n  /** Disposes the current tooltip and the overlay it is attached to */\n  private _disposeTooltip(): void {\n    this._overlayRef.dispose();\n    this._overlayRef = null;\n    this._tooltipInstance = null;\n  }\n\n  /** Returns the origin position based on the user's position preference */\n  _getOrigin(): OriginConnectionPosition {\n    if (this.position == 'above' || this.position == 'below') {\n      return { originX: 'center', originY: this.position == 'above' ? 'top' : 'bottom' };\n    }\n\n    const isDirectionLtr = !this._dir || this._dir.value == 'ltr';\n    if (this.position == 'left' ||\n      this.position == 'before' && isDirectionLtr ||\n      this.position == 'after' && !isDirectionLtr) {\n      return { originX: 'start', originY: 'center' };\n    }\n\n    if (this.position == 'right' ||\n      this.position == 'after' && isDirectionLtr ||\n      this.position == 'before' && !isDirectionLtr) {\n      return { originX: 'end', originY: 'center' };\n    }\n\n    throwMd2TooltipInvalidPositionError(this.position);\n  }\n\n  /** Returns the overlay position based on the user's preference */\n  _getOverlayPosition(): OverlayConnectionPosition {\n    if (this.position == 'above') {\n      return { overlayX: 'center', overlayY: 'bottom' };\n    }\n\n    if (this.position == 'below') {\n      return { overlayX: 'center', overlayY: 'top' };\n    }\n\n    const isLtr = !this._dir || this._dir.value == 'ltr';\n    if (this.position == 'left' ||\n      this.position == 'before' && isLtr ||\n      this.position == 'after' && !isLtr) {\n      return { overlayX: 'end', overlayY: 'center' };\n    }\n\n    if (this.position == 'right' ||\n      this.position == 'after' && isLtr ||\n      this.position == 'before' && !isLtr) {\n      return { overlayX: 'start', overlayY: 'center' };\n    }\n\n    throwMd2TooltipInvalidPositionError(this.position);\n  }\n\n  /** Updates the tooltip message and repositions the overlay according to the new message length */\n  private _setTooltipMessage(message: string) {\n    // Must wait for the message to be painted to the tooltip so that the overlay can properly\n    // calculate the correct positioning based on the size of the text.\n    this._tooltipInstance.message = message;\n    this._tooltipInstance._markForCheck();\n\n    this._ngZone.onMicrotaskEmpty.first().subscribe(() => {\n      if (this._tooltipInstance) {\n        this._overlayRef.updatePosition();\n      }\n    });\n  }\n}\n\nexport type TooltipVisibility = 'initial' | 'visible' | 'hidden';\n\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n */\n@Component({\n  moduleId: module.id,\n  selector: 'md2-tooltip',\n  templateUrl: 'tooltip.html',\n  styleUrls: ['tooltip.css'],\n  animations: [\n    trigger('state', [\n      state('void', style({ transform: 'scale(0)' })),\n      state('initial', style({ transform: 'scale(0)' })),\n      state('visible', style({ transform: 'scale(1)' })),\n      state('hidden', style({ transform: 'scale(0)' })),\n      transition('* => visible', animate('150ms cubic-bezier(0.0, 0.0, 0.2, 1)')),\n      transition('* => hidden', animate('150ms cubic-bezier(0.4, 0.0, 1, 1)')),\n    ])\n  ],\n  host: {\n    '[style.zoom]': '_visibility === \"visible\" ? 1 : null',\n    '(body:click)': 'this._handleBodyInteraction()'\n  },\n  encapsulation: ViewEncapsulation.None\n})\nexport class Md2TooltipComponent {\n  /** Message to display in the tooltip */\n  message: string;\n\n  /** The timeout ID of any current timer set to show the tooltip */\n  _showTimeoutId: number;\n\n  /** The timeout ID of any current timer set to hide the tooltip */\n  _hideTimeoutId: number;\n\n  /** Property watched by the animation framework to show or hide the tooltip */\n  _visibility: TooltipVisibility = 'initial';\n\n  /** Whether interactions on the page should close the tooltip */\n  _closeOnInteraction: boolean = false;\n\n  /** The transform origin used in the animation for showing and hiding the tooltip */\n  _transformOrigin: string = 'bottom';\n\n  /** Subject for notifying that the tooltip has been hidden from the view */\n  private _onHide: Subject<any> = new Subject();\n\n  constructor( @Optional() private _dir: Dir, private _changeDetectorRef: ChangeDetectorRef) { }\n\n  /**\n   * Shows the tooltip with an animation originating from the provided origin\n   * @param position Position of the tooltip.\n   * @param delay Amount of milliseconds to the delay showing the tooltip.\n   */\n  show(position: TooltipPosition, delay: number): void {\n    // Cancel the delayed hide if it is scheduled\n    if (this._hideTimeoutId) {\n      clearTimeout(this._hideTimeoutId);\n    }\n\n    // Body interactions should cancel the tooltip if there is a delay in showing.\n    this._closeOnInteraction = true;\n\n    this._setTransformOrigin(position);\n    this._showTimeoutId = setTimeout(() => {\n      this._visibility = 'visible';\n\n      // If this was set to true immediately, then a body click that triggers show() would\n      // trigger interaction and close the tooltip right after it was displayed.\n      this._closeOnInteraction = false;\n\n      // Mark for check so if any parent component has set the\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\n      this._markForCheck();\n      setTimeout(() => this._closeOnInteraction = true, 0);\n    }, delay);\n  }\n\n  /**\n   * Begins the animation to hide the tooltip after the provided delay in ms.\n   * @param delay Amount of milliseconds to delay showing the tooltip.\n   */\n  hide(delay: number): void {\n    // Cancel the delayed show if it is scheduled\n    if (this._showTimeoutId) {\n      clearTimeout(this._showTimeoutId);\n    }\n\n    this._hideTimeoutId = setTimeout(() => {\n      this._visibility = 'hidden';\n      this._closeOnInteraction = false;\n\n      // Mark for check so if any parent component has set the\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\n      this._markForCheck();\n    }, delay);\n  }\n\n  /**\n   * Returns an observable that notifies when the tooltip has been hidden from view\n   */\n  afterHidden(): Observable<void> {\n    return this._onHide.asObservable();\n  }\n\n  /**\n   * Whether the tooltip is being displayed\n   */\n  isVisible(): boolean {\n    return this._visibility === 'visible';\n  }\n\n  /** Sets the tooltip transform origin according to the tooltip position */\n  _setTransformOrigin(value: TooltipPosition) {\n    const isLtr = !this._dir || this._dir.value == 'ltr';\n    switch (value) {\n      case 'before': this._transformOrigin = isLtr ? 'right' : 'left'; break;\n      case 'after': this._transformOrigin = isLtr ? 'left' : 'right'; break;\n      case 'left': this._transformOrigin = 'right'; break;\n      case 'right': this._transformOrigin = 'left'; break;\n      case 'above': this._transformOrigin = 'bottom'; break;\n      case 'below': this._transformOrigin = 'top'; break;\n      default: throwMd2TooltipInvalidPositionError(value);\n    }\n  }\n\n  _afterVisibilityAnimation(e: AnimationEvent): void {\n    if (e.toState === 'hidden' && !this.isVisible()) {\n      this._onHide.next();\n    }\n  }\n\n  /**\n   * Interactions on the HTML body should close the tooltip immediately as defined in the\n   * material design spec.\n   * https://material.google.com/components/tooltips.html#tooltips-interaction\n   */\n  _handleBodyInteraction(): void {\n    if (this._closeOnInteraction) {\n      this.hide(0);\n    }\n  }\n\n  /**\n   * Marks that the tooltip needs to be checked in the next change detection run.\n   * Mainly used for rendering the initial text before positioning a tooltip, which\n   * can be problematic in components with OnPush change detection.\n   */\n  _markForCheck(): void {\n    this._changeDetectorRef.markForCheck();\n  }\n}\n"]}