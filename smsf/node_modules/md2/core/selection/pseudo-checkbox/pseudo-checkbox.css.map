{"version":3,"sources":["core/selection/pseudo-checkbox/pseudo-checkbox.scss","core/style/_variables.scss","core/style/_checkbox-common.scss"],"names":[],"mappings":"AASA,qBACE,MCuBgB,KDtBhB,OCsBgB,KDrBhB,OEN0B,IFMS,MACnC,cAAe,IACf,OAAQ,QACR,QAAS,aACT,eAAgB,OAChB,WAAY,WACZ,SAAU,SACV,WACI,aEX6B,KD8BM,uBAA4B,CDlB/D,iBEZ6B,KD8BM,wBD9BzC,4BAgBI,SAAU,SACV,QAAS,EACT,QAAS,GACT,cEtBwB,IFsBkB,MAAM,aAChD,WAAY,QEpBmB,KD8BM,wBD9BzC,iDAAA,uDAwBI,OAAQ,KAIZ,8BACE,OAAQ,QAGV,0CACE,IAAK,IACL,KErC0B,IFsC1B,MAAO,KACP,QAAS,EAGX,oCACE,IAAK,IACL,KAAM,IACN,MA7C2B,KA8C3B,OAAQ,IACR,YE/C0B,IF+Cc,MAAM,aAC9C,UAAW,eACX,QAAS","file":"pseudo-checkbox.css","sourcesContent":["@import '../../style/checkbox-common';\n\n// Padding inside of a pseudo checkbox.\n$_mat-pseudo-checkbox-padding: $mat-checkbox-border-width * 2;\n\n// Size of the checkmark in a pseudo checkbox.\n$_mat-pseudo-checkmark-size: $mat-checkbox-size - (2 * $_mat-pseudo-checkbox-padding);\n\n\n.mat-pseudo-checkbox {\n  width: $mat-checkbox-size;\n  height: $mat-checkbox-size;\n  border: $mat-checkbox-border-width solid;\n  border-radius: 2px;\n  cursor: pointer;\n  display: inline-block;\n  vertical-align: middle;\n  box-sizing: border-box;\n  position: relative;\n  transition:\n      border-color $mat-checkbox-transition-duration $mat-linear-out-slow-in-timing-function,\n      background-color $mat-checkbox-transition-duration $mat-linear-out-slow-in-timing-function;\n\n  // Used to render the checkmark/mixedmark inside of the box.\n  &::after {\n    position: absolute;\n    opacity: 0;\n    content: '';\n    border-bottom: $mat-checkbox-border-width solid currentColor;\n    transition: opacity $mat-checkbox-transition-duration $mat-linear-out-slow-in-timing-function;\n  }\n\n  &.mat-pseudo-checkbox-checked, &.mat-pseudo-checkbox-indeterminate {\n    border: none;\n  }\n}\n\n.mat-pseudo-checkbox-disabled {\n  cursor: default;\n}\n\n.mat-pseudo-checkbox-indeterminate::after {\n  top: ($mat-checkbox-size - $mat-checkbox-border-width) / 2;\n  left: $mat-checkbox-border-width;\n  width: $mat-checkbox-size - ($mat-checkbox-border-width * 2);\n  opacity: 1;\n}\n\n.mat-pseudo-checkbox-checked::after {\n  top: ($mat-checkbox-size / 2) - ($_mat-pseudo-checkmark-size / 4) - ($mat-checkbox-size / 10);\n  left: $_mat-pseudo-checkbox-padding - $mat-checkbox-border-width / 2;\n  width: $_mat-pseudo-checkmark-size;\n  height: ($_mat-pseudo-checkmark-size - $mat-checkbox-border-width) / 2;\n  border-left: $mat-checkbox-border-width solid currentColor;\n  transform: rotate(-45deg);\n  opacity: 1;\n}\n","// Media queries\n// TODO: Find a way to respect media query ranges.\n// TODO: For example the xs-breakpoint should not interfere with the sm-breakpoint.\n$mat-xsmall: 'max-width: 600px';\n$mat-small: 'max-width: 960px';\n\n// TODO(crisbeto): this isn't being used anywhere within Material. keeping for backwards compat.\n$mat-font-family: Roboto, 'Helvetica Neue', sans-serif !default;\n\n// TODO: Revisit all z-indices before beta\n// z-index master list\n\n$z-index-fab: 20 !default;\n$z-index-drawer: 100 !default;\n\n// Overlay z indices.\n\n// We want overlays to always appear over user content, so set a baseline\n// very high z-index for the overlay container, which is where we create the new\n// stacking context for all overlays.\n$cdk-z-index-overlay-container: 1000;\n$cdk-z-index-overlay: 1000;\n$cdk-z-index-overlay-backdrop: 1000;\n\n// Background color for all of the backdrops\n$cdk-overlay-dark-backdrop-background: rgba(0, 0, 0, 0.6);\n\n// Global constants\n$pi: 3.14159265;\n\n// Padding between input toggles and their labels\n$mat-toggle-padding: 8px !default;\n// Width and height of input toggles\n$mat-toggle-size: 20px !default;\n\n// Easing Curves\n// TODO(jelbourn): all of these need to be revisited\n\n// The default animation curves used by material design.\n$mat-linear-out-slow-in-timing-function: cubic-bezier(0, 0, 0.2, 0.1) !default;\n$mat-fast-out-slow-in-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !default;\n$mat-fast-out-linear-in-timing-function: cubic-bezier(0.4, 0, 1, 1) !default;\n\n$ease-in-out-curve-function: cubic-bezier(0.35, 0, 0.25, 1) !default;\n\n$swift-ease-out-duration: 400ms !default;\n$swift-ease-out-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n$swift-ease-out: all $swift-ease-out-duration $swift-ease-out-timing-function !default;\n\n$swift-ease-in-duration: 300ms !default;\n$swift-ease-in-timing-function: cubic-bezier(0.55, 0, 0.55, 0.2) !default;\n$swift-ease-in: all $swift-ease-in-duration $swift-ease-in-timing-function !default;\n\n$swift-ease-in-out-duration: 500ms !default;\n$swift-ease-in-out-timing-function: $ease-in-out-curve-function !default;\n$swift-ease-in-out: all $swift-ease-in-out-duration $swift-ease-in-out-timing-function !default;\n\n$swift-linear-duration: 80ms !default;\n$swift-linear-timing-function: linear !default;\n$swift-linear: all $swift-linear-duration $swift-linear-timing-function !default;\n","@import './variables';\n\n// The width/height of the checkbox element.\n$mat-checkbox-size: $mat-toggle-size !default;\n\n// The width of the checkbox border shown when the checkbox is unchecked.\n$mat-checkbox-border-width: 2px;\n\n// The base duration used for the majority of transitions for the checkbox.\n$mat-checkbox-transition-duration: 90ms;\n"]}