{"version":3,"file":"overlay-state.js","sourceRoot":"","sources":["../../../../src/lib/core/overlay/overlay-state.ts"],"names":[],"mappings":"AAKA;;;GAGG;AACH;IAAA;QAOE,+CAA+C;QAC/C,eAAU,GAAW,EAAE,CAAC;QAExB,0CAA0C;QAC1C,gBAAW,GAAY,KAAK,CAAC;QAE7B,0CAA0C;QAC1C,kBAAa,GAAW,2BAA2B,CAAC;QAcpD,sDAAsD;QACtD,cAAS,GAAoB,KAAK,CAAC;QAEnC,6CAA6C;QAC7C,eAAe;QACf,2BAA2B;QAC3B,YAAY;IACd,CAAC;IAAD,mBAAC;AAAD,CAAC,AAnCD,IAmCC","sourcesContent":["import {PositionStrategy} from './position/position-strategy';\nimport {LayoutDirection} from '../rtl/dir';\nimport {ScrollStrategy} from './scroll/scroll-strategy';\n\n\n/**\n * OverlayState is a bag of values for either the initial configuration or current state of an\n * overlay.\n */\nexport class OverlayState {\n  /** Strategy with which to position the overlay. */\n  positionStrategy: PositionStrategy;\n\n  /** Strategy to be used when handling scroll events while the overlay is open. */\n  scrollStrategy: ScrollStrategy;\n\n  /** Custom class to add to the overlay pane. */\n  panelClass: string = '';\n\n  /** Whether the overlay has a backdrop. */\n  hasBackdrop: boolean = false;\n\n  /** Custom class to add to the backdrop */\n  backdropClass: string = 'cdk-overlay-dark-backdrop';\n\n  /** The width of the overlay panel. If a number is provided, pixel units are assumed. */\n  width: number | string;\n\n  /** The height of the overlay panel. If a number is provided, pixel units are assumed. */\n  height: number | string;\n\n  /** The min-width of the overlay panel. If a number is provided, pixel units are assumed. */\n  minWidth: number | string;\n\n  /** The min-height of the overlay panel. If a number is provided, pixel units are assumed. */\n  minHeight: number | string;\n\n  /** The direction of the text in the overlay panel. */\n  direction: LayoutDirection = 'ltr';\n\n  // TODO(jelbourn): configuration still to add\n  // - focus trap\n  // - disable pointer events\n  // - z-index\n}\n"]}