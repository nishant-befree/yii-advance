{"version":3,"file":"activedescendant-key-manager.js","sourceRoot":"","sources":["../../../../src/lib/core/a11y/activedescendant-key-manager.ts"],"names":[],"mappings":";;;;;;;;;;AACA,OAAO,EAAC,cAAc,EAAa,MAAM,oBAAoB,CAAC;AAY9D;IAAgD,8CAA6B;IAA7E;;IAmBA,CAAC;IAjBC;;;;OAIG;IACH,kDAAa,GAAb,UAAc,KAAa;QAA3B,iBAUC;QATC,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC;YACrB,EAAE,CAAC,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBACpB,KAAI,CAAC,UAAU,CAAC,iBAAiB,EAAE,CAAC;YACtC,CAAC;YACD,iBAAM,aAAa,aAAC,KAAK,CAAC,CAAC;YAC3B,EAAE,CAAC,CAAC,KAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBACpB,KAAI,CAAC,UAAU,CAAC,eAAe,EAAE,CAAC;YACpC,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEH,iCAAC;AAAD,CAAC,AAnBD,CAAgD,cAAc,GAmB7D","sourcesContent":["import {QueryList} from '@angular/core';\nimport {ListKeyManager, CanDisable} from './list-key-manager';\n\n/**\n * This is the interface for highlightable items (used by the ActiveDescendantKeyManager).\n * Each item must know how to style itself as active or inactive and whether or not it is\n * currently disabled.\n */\nexport interface Highlightable extends CanDisable {\n  setActiveStyles(): void;\n  setInactiveStyles(): void;\n}\n\nexport class ActiveDescendantKeyManager extends ListKeyManager<Highlightable> {\n\n  /**\n   * This method sets the active item to the item at the specified index.\n   * It also adds active styles to the newly active item and removes active\n   * styles from the previously active item.\n   */\n  setActiveItem(index: number): void {\n    Promise.resolve().then(() => {\n      if (this.activeItem) {\n        this.activeItem.setInactiveStyles();\n      }\n      super.setActiveItem(index);\n      if (this.activeItem) {\n        this.activeItem.setActiveStyles();\n      }\n    });\n  }\n\n}\n"]}