{"version":3,"file":"jasmine-matchers.js","sourceRoot":"","sources":["../../../../src/lib/core/testing/jasmine-matchers.ts"],"names":[],"mappings":"AAAA;;GAEG;AACH,AAHA;;GAEG,CACH,MAAM,CAAC,IAAM,cAAc,GAAmC;IAC5D,QAAQ,EAAE;QACR,MAAM,CAAC;YACL,OAAO,EAAE,UAAU,OAAgB,EAAE,YAAoB;gBACvD,IAAM,MAAM,GAAgC,EAAC,IAAI,EAAE,KAAK,EAAC,CAAC;gBAC1D,IAAM,UAAU,GAAG,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;gBAEhD,MAAM,CAAC,IAAI,GAAG,UAAU,KAAK,YAAY,CAAC;gBAC1C,MAAM,CAAC,OAAO,GAAG,uBAAqB,OAAO,CAAC,OAAO,eAAU,YAAc,CAAC;gBAE9E,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;oBACjB,MAAM,CAAC,OAAO,IAAI,cAAY,UAAY,CAAC;gBAC7C,CAAC;gBAED,MAAM,CAAC,MAAM,CAAC;YAChB,CAAC;SACF,CAAC;IACJ,CAAC;CACF,CAAC","sourcesContent":["/**\n * Collection of useful custom jasmine matchers for tests.\n */\nexport const customMatchers: jasmine.CustomMatcherFactories = {\n  toBeRole: () => {\n    return {\n      compare: function (element: Element, expectedRole: string) {\n        const result: jasmine.CustomMatcherResult = {pass: false};\n        const actualRole = element.getAttribute('role');\n\n        result.pass = actualRole === expectedRole;\n        result.message = `Expected role for ${element.tagName} to be ${expectedRole}`;\n\n        if (!result.pass) {\n          result.message += ` but was ${actualRole}`;\n        }\n\n        return result;\n      }\n    };\n  }\n};\n"]}