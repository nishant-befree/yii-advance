{"version":3,"file":"observe-content.js","sourceRoot":"","sources":["../../../../src/lib/core/observe-content/observe-content.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Directive,\n  ElementRef,\n  NgModule,\n  Output,\n  Input,\n  EventEmitter,\n  OnDestroy,\n  AfterContentInit,\n  Injectable,\n} from '@angular/core';\nimport {Subject} from 'rxjs/Subject';\nimport 'rxjs/add/operator/debounceTime';\n\n/**\n * Factory that creates a new MutationObserver and allows us to stub it out in unit tests.\n * @docs-private\n */\n@Injectable()\nexport class MdMutationObserverFactory {\n  create(callback: any): MutationObserver {\n    return typeof MutationObserver === 'undefined' ? null : new MutationObserver(callback);\n  }\n}\n\n/**\n * Directive that triggers a callback whenever the content of\n * its associated element has changed.\n */\n@Directive({\n  selector: '[cdkObserveContent]'\n})\nexport class ObserveContent implements AfterContentInit, OnDestroy {\n  private _observer: MutationObserver;\n\n  /** Event emitted for each change in the element's content. */\n  @Output('cdkObserveContent') event = new EventEmitter<MutationRecord[]>();\n\n  /** Used for debouncing the emitted values to the observeContent event. */\n  private _debouncer = new Subject<MutationRecord[]>();\n\n  /** Debounce interval for emitting the changes. */\n  @Input() debounce: number;\n\n  constructor(\n    private _mutationObserverFactory: MdMutationObserverFactory,\n    private _elementRef: ElementRef) { }\n\n  ngAfterContentInit() {\n    if (this.debounce > 0) {\n      this._debouncer\n        .debounceTime(this.debounce)\n        .subscribe(mutations => this.event.emit(mutations));\n    } else {\n      this._debouncer.subscribe(mutations => this.event.emit(mutations));\n    }\n\n    this._observer = this._mutationObserverFactory.create((mutations: MutationRecord[]) => {\n      this._debouncer.next(mutations);\n    });\n\n    if (this._observer) {\n      this._observer.observe(this._elementRef.nativeElement, {\n        characterData: true,\n        childList: true,\n        subtree: true\n      });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._observer) {\n      this._observer.disconnect();\n      this._debouncer.complete();\n      this._debouncer = this._observer = null;\n    }\n  }\n}\n\n\n@NgModule({\n  exports: [ObserveContent],\n  declarations: [ObserveContent],\n  providers: [MdMutationObserverFactory]\n})\nexport class ObserveContentModule {}\n"]}